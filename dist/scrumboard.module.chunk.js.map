{"version":3,"sources":["./src/app/main/content/apps/scrumboard/board.model.ts","./src/app/main/content/apps/scrumboard/board/add-list/add-list.component.html","./src/app/main/content/apps/scrumboard/board/add-list/add-list.component.scss","./src/app/main/content/apps/scrumboard/board/add-list/add-list.component.ts","./src/app/main/content/apps/scrumboard/board/board.component.html","./src/app/main/content/apps/scrumboard/board/board.component.scss","./src/app/main/content/apps/scrumboard/board/board.component.ts","./src/app/main/content/apps/scrumboard/board/dialogs/card/card.component.html","./src/app/main/content/apps/scrumboard/board/dialogs/card/card.component.scss","./src/app/main/content/apps/scrumboard/board/dialogs/card/card.component.ts","./src/app/main/content/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.html","./src/app/main/content/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.scss","./src/app/main/content/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.ts","./src/app/main/content/apps/scrumboard/board/edit-board-name/edit-board-name.component.html","./src/app/main/content/apps/scrumboard/board/edit-board-name/edit-board-name.component.scss","./src/app/main/content/apps/scrumboard/board/edit-board-name/edit-board-name.component.ts","./src/app/main/content/apps/scrumboard/board/list/add-card/add-card.component.html","./src/app/main/content/apps/scrumboard/board/list/add-card/add-card.component.scss","./src/app/main/content/apps/scrumboard/board/list/add-card/add-card.component.ts","./src/app/main/content/apps/scrumboard/board/list/card/card.component.html","./src/app/main/content/apps/scrumboard/board/list/card/card.component.scss","./src/app/main/content/apps/scrumboard/board/list/card/card.component.ts","./src/app/main/content/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.html","./src/app/main/content/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.scss","./src/app/main/content/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.ts","./src/app/main/content/apps/scrumboard/board/list/list.component.html","./src/app/main/content/apps/scrumboard/board/list/list.component.scss","./src/app/main/content/apps/scrumboard/board/list/list.component.ts","./src/app/main/content/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.html","./src/app/main/content/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.scss","./src/app/main/content/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.ts","./src/app/main/content/apps/scrumboard/board/sidenavs/settings/settings.component.html","./src/app/main/content/apps/scrumboard/board/sidenavs/settings/settings.component.scss","./src/app/main/content/apps/scrumboard/board/sidenavs/settings/settings.component.ts","./src/app/main/content/apps/scrumboard/card.model.ts","./src/app/main/content/apps/scrumboard/list.model.ts","./src/app/main/content/apps/scrumboard/scrumboard.component.html","./src/app/main/content/apps/scrumboard/scrumboard.component.scss","./src/app/main/content/apps/scrumboard/scrumboard.component.ts","./src/app/main/content/apps/scrumboard/scrumboard.module.ts","./src/app/main/content/apps/scrumboard/scrumboard.service.ts"],"names":[],"mappings":"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","file":"scrumboard.module.chunk.js","sourcesContent":["import { FuseUtils } from '@fuse/utils';\n\nimport { List } from './list.model';\nimport { Card } from './card.model';\n\nconst sampleLabels = [\n    {\n        'id'   : '56027e4119ad3a5dc28b36cd',\n        'name' : 'Design',\n        'color': 'mat-red-500-bg'\n    },\n    {\n        'id'   : '5640635e19ad3a5dc21416b2',\n        'name' : 'App',\n        'color': 'mat-blue-500-bg'\n    },\n    {\n        'id'   : '6540635g19ad3s5dc31412b2',\n        'name' : 'Feature',\n        'color': 'mat-green-400-bg'\n    }\n];\n\nconst sampleMembers = [\n    {\n        id    : '56027c1930450d8bf7b10758',\n        name  : 'Alice Freeman',\n        avatar: 'assets/images/avatars/alice.jpg'\n    },\n    {\n        id    : '26027s1930450d8bf7b10828',\n        name  : 'Danielle Obrien',\n        avatar: 'assets/images/avatars/danielle.jpg'\n    },\n    {\n        id    : '76027g1930450d8bf7b10958',\n        name  : 'James Lewis',\n        avatar: 'assets/images/avatars/james.jpg'\n    },\n    {\n        id    : '36027j1930450d8bf7b10158',\n        name  : 'Vincent Munoz',\n        avatar: 'assets/images/avatars/vincent.jpg'\n    }\n];\n\nexport class Board\n{\n    name: string;\n    uri: string;\n    id: string;\n    settings: {\n        color: string,\n        subscribed: boolean,\n        cardCoverImages: boolean\n    };\n    lists: List[];\n    cards: Card[];\n    members: {\n        id: string,\n        name: string,\n        avatar: string\n    }[];\n    labels: {\n        id: string,\n        name: string,\n        color: string\n    }[];\n\n    constructor(board)\n    {\n        this.name = board.name || 'Untitled Board';\n        this.uri = board.uri || 'untitled-board';\n        this.id = board.id || FuseUtils.generateGUID();\n        this.settings = board.settings || {\n            color          : '',\n            subscribed     : true,\n            cardCoverImages: true\n        };\n        this.lists = [];\n        this.cards = [];\n        this.members = board.members || sampleMembers;\n        this.labels = board.labels || sampleLabels;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board.model.ts","module.exports = \"<div class=\\\"list new-list mat-elevation-z1\\\">\\n\\n    <button *ngIf=\\\"!formActive\\\" mat-button class=\\\"new-list-form-button\\\" (click)=\\\"openForm()\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-icon class=\\\"mat-red-bg\\\">add</mat-icon>\\n            <span>Add a list</span>\\n        </div>\\n    </button>\\n\\n    <form *ngIf=\\\"formActive\\\" class=\\\"new-list-form\\\" [formGroup]=\\\"form\\\" (submit)=\\\"onFormSubmit()\\\"\\n          fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxFlex=\\\"1 0 auto\\\">\\n\\n        <input formControlName=\\\"name\\\" #nameInput fxFlex placeholder=\\\"Write a list Name\\\">\\n\\n        <button mat-icon-button fxFlex=\\\"0 1 auto\\\">\\n            <mat-icon>check</mat-icon>\\n        </button>\\n        <button mat-icon-button fxFlex=\\\"0 1 auto\\\" (click)=\\\"closeForm()\\\">\\n            <mat-icon>close</mat-icon>\\n        </button>\\n    </form>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/add-list/add-list.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/add-list/add-list.component.html\n// module chunks = scrumboard.module","module.exports = \":host .new-list {\\n  border-radius: 2px;\\n  background-color: #EEF0F2; }\\n  :host .new-list .new-list-form-button {\\n    text-transform: none;\\n    font-size: 15px;\\n    padding: 0 16px;\\n    height: 64px;\\n    margin: 0;\\n    width: 100%; }\\n  :host .new-list .new-list-form-button mat-icon {\\n      border-radius: 50%;\\n      height: 40px;\\n      width: 40px;\\n      line-height: 40px;\\n      margin-right: 16px; }\\n  :host .new-list .new-list-form {\\n    padding: 16px;\\n    height: 64px; }\\n  :host .new-list .new-list-form > input {\\n      height: 100%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/add-list/add-list.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/add-list/add-list.component.scss\n// module chunks = scrumboard.module","import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n    selector   : 'fuse-scrumboard-board-add-list',\n    templateUrl: './add-list.component.html',\n    styleUrls  : ['./add-list.component.scss']\n})\nexport class FuseScrumboardBoardAddListComponent\n{\n    formActive = false;\n    form: FormGroup;\n    @Output() onlistAdd = new EventEmitter();\n    @ViewChild('nameInput') nameInputField;\n\n    constructor(\n        private formBuilder: FormBuilder\n    )\n    {\n    }\n    \n    openForm()\n    {\n        this.form = this.formBuilder.group({\n            name: ['']\n        });\n        this.formActive = true;\n        this.focusNameField();\n    }\n\n    closeForm()\n    {\n        this.formActive = false;\n    }\n\n    focusNameField()\n    {\n        setTimeout(() => {\n            this.nameInputField.nativeElement.focus();\n        });\n    }\n\n    onFormSubmit()\n    {\n        if ( this.form.valid )\n        {\n            this.onlistAdd.next(this.form.getRawValue().name);\n            this.formActive = false;\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/add-list/add-list.component.ts","module.exports = \"<mat-sidenav-container>\\n\\n    <div id=\\\"board\\\">\\n\\n        <!-- HEADER -->\\n        <div class=\\\"header mat-accent-bg p-16 p-mat-24\\\" [ngClass]=\\\"'mat-'+board.settings.color+'-bg'\\\" fxLayout=\\\"column\\\">\\n\\n            <div class=\\\"header-content\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between\\\" fxFlex=\\\"1 0 auto\\\">\\n\\n                <!-- BOARD SELECTION BUTTON -->\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxFlexOrder=\\\"2\\\" fxFlexOrder.gt-xs=\\\"1\\\">\\n                    <button mat-raised-button class=\\\"mat-accent header-boards-button\\\"\\n                            [ngClass]=\\\"'mat-'+board.settings.color+'-700-bg'\\\"\\n                            routerLink=\\\"/apps/scrumboard/boards\\\"\\n                            aria-label=\\\"boards button\\\">\\n                        <mat-icon>assessment</mat-icon>\\n                        <span>BOARDS</span>\\n                    </button>\\n                </div>\\n                <!-- / BOARD SELECTION BUTTON -->\\n\\n                <!-- BOARD NAME -->\\n                <div class=\\\"header-board-name mb-8 mb-mat-0\\\"\\n                     fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"\\n                     fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"center center\\\"\\n                     fxFlex=\\\"1 0 100%\\\" fxFlex.gt-xs=\\\"1 0 auto\\\"\\n                     fxFlexOrder=\\\"1\\\" fxFlexOrder.gt-xs=\\\"2\\\">\\n                    <mat-icon *ngIf=\\\"board.settings.subscribed\\\" class=\\\"board-subscribe s-16\\\">remove_red_eye</mat-icon>\\n                    <fuse-scrumboard-edit-board-name\\n                        [board]=\\\"board\\\"\\n                        (onNameChanged)=\\\"onBoardNameChanged($event)\\\">\\n                    </fuse-scrumboard-edit-board-name>\\n                </div>\\n                <!-- / BOARD NAME -->\\n\\n                <!-- TOOLBAR -->\\n                <div class=\\\"toolbar\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" fxFlexOrder=\\\"3\\\">\\n\\n                    <!-- BOARD SETTINGS BUTTON -->\\n                    <button mat-icon-button (click)=\\\"settingsSidenav.toggle()\\\"\\n                            aria-label=\\\"Settings\\\" matTooltip=\\\"Settings\\\">\\n                        <mat-icon>settings</mat-icon>\\n                    </button>\\n                    <!-- / BOARD SETTINGS BUTTON -->\\n                </div>\\n                <!-- / TOOLBAR -->\\n\\n            </div>\\n\\n        </div>\\n        <!-- / HEADER -->\\n\\n        <div fxFlex class=\\\"board-content-wrapper p-16 p-mat-24\\\" [ngClass]=\\\"board.settings.color+'-100-bg'\\\">\\n\\n            <!-- BOARD -->\\n            <div class=\\\"board-content ngx-dnd-container p-16 p-mat-24\\\" fxLayout=\\\"row\\\"\\n                 ngxDroppable=\\\"list\\\" [model]=\\\"board.lists\\\" (out)=\\\"onDrop($event)\\\"\\n                 *fuseIfOnDom [@animateStagger]=\\\"{value:'50'}\\\">\\n\\n                <!-- LIST -->\\n                <fuse-scrumboard-board-list\\n                    class=\\\"scrumboard-board-list list-wrapper ngx-dnd-item\\\"\\n                    ngxDraggable\\n                    *ngFor=\\\"let list of board.lists\\\"\\n                    [model]=\\\"list\\\"\\n                    [list]=\\\"list\\\"\\n                    [@animate]=\\\"{value:'*',params:{duration:'350ms',x:'100%'}}\\\">\\n                </fuse-scrumboard-board-list>\\n                <!-- / LIST -->\\n\\n                <!-- NEW LIST BUTTON-->\\n                <fuse-scrumboard-board-add-list class=\\\"new-list-wrapper\\\" (onlistAdd)=\\\"onListAdd($event)\\\"\\n                                                [@animate]=\\\"{value:'*',params:{duration:'350ms',x:'100%'}}\\\">\\n                </fuse-scrumboard-board-add-list>\\n                <!-- / NEW LIST BUTTON-->\\n\\n            </div>\\n            <!-- / BOARD -->\\n        </div>\\n        <!-- primary content -->\\n    </div>\\n\\n    <mat-sidenav #settingsSidenav align=\\\"end\\\">\\n        <fuse-scrumboard-board-settings></fuse-scrumboard-board-settings>\\n    </mat-sidenav>\\n\\n</mat-sidenav-container>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/board.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/board.component.html\n// module chunks = scrumboard.module","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host mat-sidenav-container {\\n  width: 100%;\\n  height: 100%; }\\n:host mat-sidenav-container mat-sidenav {\\n    width: 320px !important;\\n    min-width: 320px !important;\\n    max-width: 320px !important; }\\n:host mat-sidenav-container #board {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n        -ms-flex-direction: column !important;\\n            flex-direction: column !important;\\n    height: 100%; }\\n:host mat-sidenav-container #board > .header {\\n      position: relative;\\n      min-height: 96px;\\n      background-image: none;\\n      z-index: 49; }\\n:host mat-sidenav-container #board > .header .header-content .header-boards-button {\\n        margin: 0; }\\n:host mat-sidenav-container #board > .header .header-content .header-board-name {\\n        font-size: 16px; }\\n:host mat-sidenav-container #board > .header .header-content .header-board-name .board-subscribe {\\n          margin-right: 8px; }\\n:host mat-sidenav-container #board > .header .header-content .header-board-name .editable-buttons mat-icon {\\n          color: #FFFFFF !important; }\\n:host mat-sidenav-container #board > .header .header-content .right-side > .mat-button:last-child {\\n        margin-right: 0; }\\n:host mat-sidenav-container #board #board-selector {\\n      position: absolute;\\n      top: 96px;\\n      right: 0;\\n      left: 0;\\n      height: 192px;\\n      z-index: 48;\\n      padding: 24px;\\n      opacity: 1; }\\n:host mat-sidenav-container #board #board-selector .board-list-item {\\n        width: 128px;\\n        height: 192px;\\n        padding: 16px;\\n        cursor: pointer;\\n        position: relative; }\\n:host mat-sidenav-container #board #board-selector .board-list-item .board-name {\\n          text-align: center;\\n          padding: 16px 0; }\\n:host mat-sidenav-container #board #board-selector .board-list-item .selected-icon {\\n          position: absolute;\\n          top: 0;\\n          left: 50%;\\n          width: 32px;\\n          height: 32px;\\n          margin-left: -16px;\\n          border-radius: 50%;\\n          text-align: center;\\n          color: white; }\\n:host mat-sidenav-container #board #board-selector .board-list-item .selected-icon i {\\n            line-height: 32px !important; }\\n:host mat-sidenav-container #board #board-selector .board-list-item.add-new-board {\\n          opacity: 0.6; }\\n:host mat-sidenav-container #board .board-content-wrapper {\\n      position: relative;\\n      background: #E5E7E8; }\\n:host mat-sidenav-container #board .board-content-wrapper .board-content {\\n        position: absolute;\\n        top: 0;\\n        right: 0;\\n        bottom: 0;\\n        left: 0;\\n        height: 100%;\\n        overflow-y: hidden;\\n        overflow-x: auto;\\n        -webkit-overflow-scrolling: touch; }\\n:host mat-sidenav-container #board .board-content-wrapper .board-content .list-sortable-placeholder {\\n          background: rgba(0, 0, 0, 0.06);\\n          margin-right: 24px; }\\n:host mat-sidenav-container #board .board-content-wrapper .board-content .new-list-wrapper {\\n          width: 344px;\\n          min-width: 344px;\\n          max-width: 344px;\\n          padding-right: 24px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/board.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/board.component.scss\n// module chunks = scrumboard.module","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { List } from '../list.model';\nimport { ScrumboardService } from '../scrumboard.service';\n\n@Component({\n    selector   : 'fuse-scrumboard-board',\n    templateUrl: './board.component.html',\n    styleUrls  : ['./board.component.scss'],\n    animations : fuseAnimations\n})\nexport class FuseScrumboardBoardComponent implements OnInit, OnDestroy\n{\n    board: any;\n    onBoardChanged: Subscription;\n\n    constructor(\n        private route: ActivatedRoute,\n        private location: Location,\n        private scrumboardService: ScrumboardService\n    )\n    {\n    }\n\n    ngOnInit()\n    {\n        this.onBoardChanged =\n            this.scrumboardService.onBoardChanged\n                .subscribe(board => {\n                    this.board = board;\n                });\n    }\n\n    ngOnDestroy()\n    {\n        this.onBoardChanged.unsubscribe();\n    }\n\n    onListAdd(newListName)\n    {\n        if ( newListName === '' )\n        {\n            return;\n        }\n\n        this.scrumboardService.addList(new List({name: newListName}));\n    }\n\n    onBoardNameChanged(newName)\n    {\n        this.scrumboardService.updateBoard();\n        this.location.go('/apps/scrumboard/boards/' + this.board.id + '/' + this.board.uri);\n    }\n\n    onDrop(ev)\n    {\n        this.scrumboardService.updateBoard();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/board.component.ts","module.exports = \"<div class=\\\"dialog-content-wrapper\\\">\\n    <mat-toolbar *ngIf=\\\"card\\\" matDialogTitle class=\\\"mat-accent-bg m-0\\\">\\n\\n        <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n            <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                <!-- DUE DATE -->\\n                <div class=\\\"due-date\\\" fxFlex=\\\"0 1 auto\\\">\\n\\n                    <button *ngIf=\\\"card.due\\\" mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"dueDateMenu\\\">\\n                        <mat-icon>today</mat-icon>\\n                    </button>\\n\\n                    <mat-menu #dueDateMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n                        <button mat-menu-item (click)=\\\"removeDueDate()\\\">Remove Due Date</button>\\n                    </mat-menu>\\n\\n                    <mat-form-field *ngIf=\\\"!card.due\\\">\\n                        <input matInput [matDatepicker]=\\\"menuPicker\\\" [(ngModel)]=\\\"card.due\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"menuPicker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #menuPicker></mat-datepicker>\\n                    </mat-form-field>\\n\\n                </div>\\n                <!-- / DUE DATE -->\\n\\n                <!-- LABELS -->\\n                <div class=\\\"labels\\\" fxFlex=\\\"0 1 auto\\\">\\n\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"labelsMenu\\\">\\n                        <mat-icon>label</mat-icon>\\n                    </button>\\n\\n                    <mat-menu #labelsMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\" class=\\\"scrumboard-labels-menu\\\">\\n\\n                        <fuse-scrumboard-label-selector [card]=\\\"card\\\" (onCardLabelsChange)=\\\"updateCard()\\\"></fuse-scrumboard-label-selector>\\n\\n                    </mat-menu>\\n                </div>\\n                <!-- / LABELS -->\\n\\n                <!-- MEMBERS -->\\n                <div class=\\\"members\\\" fxFlex=\\\"0 1 auto\\\">\\n\\n                    <button mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"membersMenu\\\">\\n                        <mat-icon>account_circle</mat-icon>\\n                    </button>\\n\\n                    <mat-menu #membersMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n                        <div fxFlex fxLayout=\\\"column\\\" class=\\\"scrumboard-members-menu\\\" (click)=\\\"$event.stopPropagation()\\\">\\n                            <mat-checkbox class=\\\"member px-12\\\" [checked]=\\\"card.idMembers.indexOf(member.id) > -1\\\"\\n                                          *ngFor=\\\"let member of board.members\\\"\\n                                          (change)=\\\"toggleInArray(member.id, card.idMembers);updateCard()\\\">\\n                                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                                    <img [alt]=\\\"member.name\\\" [src]=\\\" member.avatar\\\" class=\\\"avatar\\\"/>\\n                                    <p class=\\\"member-name\\\">{{ member.name }}</p>\\n                                </div>\\n                            </mat-checkbox>\\n                        </div>\\n                    </mat-menu>\\n                </div>\\n                <!-- / MEMBERS -->\\n\\n                <!-- ATTACHMENT -->\\n                <button mat-icon-button aria-label=\\\"Attachment\\\">\\n                    <mat-icon>attachment</mat-icon>\\n                </button>\\n                <!-- / ATTACHMENT -->\\n\\n                <!-- CHECKLIST -->\\n                <div class=\\\"due-date \\\" fxFlex=\\\"0 1 auto\\\">\\n\\n                    <button mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"checklistMenu\\\" #checklistMenuTrigger=\\\"matMenuTrigger\\\" (menuOpened)=\\\"onChecklistMenuOpen()\\\">\\n                        <mat-icon>check_box</mat-icon>\\n                    </button>\\n\\n                    <mat-menu #checklistMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n\\n                        <form class=\\\"px-16 py-8\\\" #newChecklistForm=\\\"ngForm\\\" (submit)=\\\"addChecklist(newChecklistForm)\\\" (click)=\\\"$event.stopPropagation()\\\"\\n                              fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\n\\n                            <mat-form-field floatPlaceholder=\\\"never\\\" (click)=\\\"$event.stopPropagation()\\\" fxFlex>\\n                                <input #newCheckListTitleField matInput ngModel #checklistTitle=\\\"ngModel\\\" name=\\\"checklistTitle\\\" placeholder=\\\"Checklist title\\\" required>\\n                            </mat-form-field>\\n\\n                            <button mat-raised-button class=\\\"mat-accent\\\" aria-label=\\\"Add Checklist\\\" [disabled]=\\\"!newChecklistForm.valid\\\">Add Checklist</button>\\n                        </form>\\n\\n                    </mat-menu>\\n                </div>\\n                <!-- / CHECKLIST -->\\n\\n                <!-- SUBSCRIBE -->\\n                <div class=\\\"subscribe \\\" fxFlex=\\\"0 1 auto\\\">\\n                    <button mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"subscribeMenu\\\">\\n                        <mat-icon>remove_red_eye</mat-icon>\\n                    </button>\\n                    <mat-menu #subscribeMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n                        <button *ngIf=\\\"card.subscribed\\\" mat-menu-item (click)=\\\"toggleSubscribe()\\\">\\n                            Unsubscribe\\n                        </button>\\n                        <button *ngIf=\\\"!card.subscribed\\\" mat-menu-item (click)=\\\"toggleSubscribe()\\\">\\n                            Subscribe\\n                        </button>\\n                    </mat-menu>\\n                </div>\\n                <!-- / SUBSCRIBE -->\\n\\n                <!-- OPTIONS -->\\n                <div class=\\\"options \\\" fxFlex=\\\"0 1 auto\\\">\\n                    <button mat-icon-button class=\\\"\\\" [matMenuTriggerFor]=\\\"optionsMenu\\\">\\n                        <mat-icon>more_horiz</mat-icon>\\n                    </button>\\n                    <mat-menu #optionsMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n                        <button mat-menu-item (click)=\\\"removeCard()\\\">\\n                            Remove Card\\n                        </button>\\n                    </mat-menu>\\n                </div>\\n                <!-- / OPTIONS -->\\n            </div>\\n\\n            <!-- CLOSE DIALOG BUTTON -->\\n            <button mat-icon-button (click)=\\\"dialogRef.close()\\\" aria-label=\\\"Close Dialog\\\">\\n                <mat-icon>close</mat-icon>\\n            </button>\\n            <!-- / CLOSE DIALOG BUTTON -->\\n        </div>\\n    </mat-toolbar>\\n\\n    <div *ngIf=\\\"card\\\" mat-dialog-content class=\\\"p-24 m-0\\\" fusePerfectScrollbar>\\n\\n        <div fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign.gt-sm=\\\"space-between center\\\"\\n             fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n            <!-- BREADCRUMB -->\\n            <div class=\\\"card-breadcrumb mb-16 mb-sm-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <span>{{board.name}}</span>\\n                <mat-icon class=\\\"s-20\\\">chevron_right</mat-icon>\\n                <span>{{list.name}}</span>\\n            </div>\\n            <!-- / BREADCRUMB -->\\n\\n            <!-- DUE DATE -->\\n            <div *ngIf=\\\"card.due\\\" class=\\\"due-date\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                <mat-form-field floatPlaceholder=\\\"never\\\">\\n                    <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"card.due\\\" placeholder=\\\"Choose a due date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker></mat-datepicker>\\n                </mat-form-field>\\n\\n                <button mat-icon-button class=\\\"remove-due-date\\\" (click)=\\\"removeDueDate()\\\">\\n                    <mat-icon class=\\\"s-16\\\">close</mat-icon>\\n                </button>\\n            </div>\\n            <!-- / DUE DATE -->\\n\\n        </div>\\n\\n        <!-- NAME -->\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-icon *ngIf=\\\"card.subscribed\\\" class=\\\"card-subscribe s-20 mr-12\\\">remove_red_eye</mat-icon>\\n            <div class=\\\"card-name\\\">\\n                <mat-form-field floatPlaceholder=\\\"never\\\" fxFlex>\\n                    <input matInput [(ngModel)]=\\\"card.name\\\" placeholder=\\\"Title\\\" required (change)=\\\"updateCard()\\\">\\n                </mat-form-field>\\n            </div>\\n        </div>\\n        <!-- / NAME -->\\n\\n        <!-- DESCRIPTION -->\\n        <div class=\\\"description\\\">\\n            <mat-form-field fxFlex>\\n                <textarea matInput [(ngModel)]=\\\"card.description\\\" placeholder=\\\"Description\\\" columns=\\\"1\\\" mat-maxlength=\\\"150\\\" max-rows=\\\"4\\\" (change)=\\\"updateCard()\\\"></textarea>\\n            </mat-form-field>\\n        </div>\\n        <!-- / DESCRIPTION -->\\n\\n        <!-- SECTIONS -->\\n        <div class=\\\"sections\\\">\\n\\n            <!-- LABELS SECTION -->\\n            <div *ngIf=\\\"card.idLabels[0] || card.idMembers[0]\\\" class=\\\"section\\\"\\n                 fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\n\\n                <div *ngIf=\\\"card.idLabels[0]\\\" fxFlex class=\\\"labels\\\">\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                        <mat-icon class=\\\"s-20\\\">label</mat-icon>\\n                        <span class=\\\"section-title\\\">Labels</span>\\n                    </div>\\n                    <div class=\\\"section-content\\\">\\n                        <mat-chip-list class=\\\"label-chips\\\">\\n                            <mat-chip class=\\\"label-chip mb-4\\\"\\n                                      *ngFor=\\\"let labelId of card.idLabels\\\"\\n                                      [ngClass]=\\\"board.labels | getById:labelId:'color'\\\"\\n                                      fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                                <span>{{board.labels|getById:labelId:'name'}}</span>\\n                                <mat-icon class=\\\"ml-8 s-16 chip-remove\\\" (click)=\\\"toggleInArray(labelId, card.idLabels);updateCard()\\\">close</mat-icon>\\n                            </mat-chip>\\n                        </mat-chip-list>\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\\"card.idMembers[0]\\\" fxFlex class=\\\"members\\\">\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                        <mat-icon class=\\\"s-20\\\">supervisor_account</mat-icon>\\n                        <span class=\\\"section-title\\\">Members</span>\\n                    </div>\\n                    <div class=\\\"section-content\\\">\\n                        <mat-chip-list class=\\\"member-chips\\\">\\n                            <mat-chip class=\\\"member-chip mb-4\\\" *ngFor=\\\"let memberId of card.idMembers\\\"\\n                                      fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                                <img class=\\\"member-chip-avatar\\\" [src]=\\\"board.members | getById:memberId:'avatar'\\\"\\n                                     [matTooltip]=\\\"board.members | getById:memberId:'name'\\\">\\n                                <mat-icon class=\\\"ml-8 s-16 chip-remove\\\" (click)=\\\"toggleInArray(memberId, card.idMembers);updateCard()\\\">close</mat-icon>\\n                            </mat-chip>\\n                        </mat-chip-list>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- / LABELS SECTION -->\\n\\n            <!-- ATTACHMENTS SECTION -->\\n            <div *ngIf=\\\"card.attachments[0]\\\" class=\\\"section\\\">\\n\\n                <div class=\\\"attachments\\\">\\n\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                        <mat-icon class=\\\"s-20\\\">attachment</mat-icon>\\n                        <span class=\\\"section-title\\\">Attachments</span>\\n                    </div>\\n\\n                    <div class=\\\"section-content\\\">\\n\\n                        <div class=\\\"attachment\\\" *ngFor=\\\"let item of card.attachments\\\" [ngSwitch]=\\\"item.type\\\">\\n\\n                            <div *ngSwitchCase=\\\"'image'\\\"\\n                                 fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"start center\\\"\\n                                 fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\">\\n\\n                                <div class=\\\"attachment-preview mat-elevation-z2\\\"\\n                                     [ngStyle]=\\\"{'background-image': 'url('+item.src+')'}\\\">\\n                                </div>\\n\\n                                <div class=\\\"attachment-content\\\" fxLayout=\\\"column\\\">\\n\\n                                    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                                        <span class=\\\"attachment-name\\\">{{item.name}}</span>\\n                                        <mat-icon *ngIf=\\\"card.idAttachmentCover === item.id\\\"\\n                                                  class=\\\"yellow-700-fg attachment-is-cover s-20\\\">star\\n                                        </mat-icon>\\n                                    </div>\\n\\n                                    <span class=\\\"attachment-time\\\">{{item.time}}</span>\\n\\n                                    <div>\\n                                        <button mat-raised-button class=\\\"attachment-actions-button\\\" [matMenuTriggerFor]=\\\"attachmentActionsMenu\\\">\\n                                            <span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n                                                <span>Actions</span>\\n                                                <mat-icon class=\\\"s-20\\\">arrow_drop_down</mat-icon>\\n                                            </span>\\n                                        </button>\\n                                        <mat-menu #attachmentActionsMenu=\\\"matMenu\\\">\\n                                            <button mat-menu-item (click)=\\\"toggleCoverImage(item.id)\\\">\\n                                                <span *ngIf=\\\"card.idAttachmentCover !== item.id\\\">Make Cover</span>\\n                                                <span *ngIf=\\\"card.idAttachmentCover === item.id\\\">Remove Cover</span>\\n                                            </button>\\n                                            <button mat-menu-item (click)=\\\"removeAttachment(item)\\\">\\n                                                Remove Attachment\\n                                            </button>\\n                                        </mat-menu>\\n                                    </div>\\n\\n                                </div>\\n                            </div>\\n\\n                            <div *ngSwitchCase=\\\"'link'\\\" fxLayout=\\\"row\\\">\\n                                <div class=\\\"attachment-preview mat-elevation-z2\\\" fxLayout=\\\"column\\\"\\n                                     fxLayoutAlign=\\\"center center\\\">\\n                                    <span>LINK</span>\\n                                </div>\\n                                <div class=\\\"attachment-content\\\" fxLayout=\\\"column\\\">\\n                                    <span class=\\\"attachment-url\\\">{{item.url}}</span>\\n                                    <span class=\\\"attachment-time\\\">{{item.time}}</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <button mat-button class=\\\"add-attachment-button\\\" aria-label=\\\"add attachment\\\">\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                                <mat-icon class=\\\"s-20\\\">add</mat-icon>\\n                                <span>Add an attachment</span>\\n                            </div>\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- / ATTACHMENTS SECTION -->\\n\\n            <!-- CHECKLISTS SECTION -->\\n            <div class=\\\"section\\\" *ngFor=\\\"let checklist of card.checklists\\\">\\n\\n                <div class=\\\"checklist\\\">\\n\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                        <mat-icon class=\\\"s-20\\\">check_box</mat-icon>\\n\\n                        <span fxFlex class=\\\"section-title\\\">{{checklist.name}}</span>\\n\\n\\n                        <div>\\n                            <button mat-icon-button class=\\\"checklist-actions-button\\\" [matMenuTriggerFor]=\\\"checklistActionsMenu\\\">\\n                                <mat-icon class=\\\"s-20\\\">more_vert</mat-icon>\\n                            </button>\\n                            <mat-menu #checklistActionsMenu=\\\"matMenu\\\">\\n                                <button mat-menu-item (click)=\\\"removeChecklist(checklist)\\\">\\n                                    <mat-icon>delete</mat-icon>\\n                                    <span>Remove Checklist</span>\\n                                </button>\\n                            </mat-menu>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"section-content\\\">\\n\\n                        <div class=\\\"checklist-progress\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                            <span class=\\\"checklist-progress-value\\\">\\n                                {{checklist.checkItemsChecked}} / {{checklist.checkItems.length}}\\n                            </span>\\n\\n                            <mat-progress-bar class=\\\"mat-accent checklist-progressbar\\\" mode=\\\"determinate\\\"\\n                                              value=\\\"{{100 * checklist.checkItemsChecked / checklist.checkItems.length}}\\\">\\n                            </mat-progress-bar>\\n                        </div>\\n\\n                        <div class=\\\"check-items\\\">\\n\\n                            <div class=\\\"check-item\\\" *ngFor=\\\"let checkItem of checklist.checkItems\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n                                <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                                    <mat-checkbox [(ngModel)]=\\\"checkItem.checked\\\"\\n                                                  (change)=\\\"updateCheckedCount(checklist)\\\"\\n                                                  aria-label=\\\"{{checkItem.name}}\\\">\\n                                    </mat-checkbox>\\n                                    <mat-form-field fxFlex class=\\\"mx-12\\\">\\n                                        <input matInput [(ngModel)]=\\\"checkItem.name\\\">\\n                                    </mat-form-field>\\n                                </div>\\n\\n                                <button mat-icon-button class=\\\"checklist-actions-button\\\" (click)=\\\"removeChecklistItem(checkItem, checklist)\\\">\\n                                    <mat-icon class=\\\"s-20\\\">delete</mat-icon>\\n                                </button>\\n\\n                            </div>\\n                        </div>\\n\\n                        <form #newCheckItemForm=\\\"ngForm\\\" (submit)=\\\"addCheckItem(newCheckItemForm,checklist)\\\" name=\\\"newCheckItemForm\\\" class=\\\"new-check-item-form\\\"\\n                              fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxFlex>\\n                                <mat-icon class=\\\"s-20\\\">add</mat-icon>\\n\\n                                <mat-form-field class=\\\"no-errors-spacer mx-12\\\" fxFlex>\\n                                    <input matInput ngModel #checkItem=\\\"ngModel\\\" name=\\\"checkItem\\\" placeholder=\\\"Add an item\\\" autocomplete=\\\"off\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <button mat-raised-button\\n                                    [disabled]=\\\"!newCheckItemForm.valid || newCheckItemForm.pristine\\\"\\n                                    class=\\\"mat-accent\\\" aria-label=\\\"Add\\\">\\n                                <span>Add</span>\\n                            </button>\\n                        </form>\\n\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- / CHECKLISTS SECTION -->\\n\\n            <!-- COMMENTS SECTION -->\\n            <div class=\\\"section\\\">\\n\\n                <div class=\\\"comments\\\">\\n\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                        <mat-icon class=\\\"s-20\\\">comment</mat-icon>\\n                        <span class=\\\"section-title\\\">Comments</span>\\n                    </div>\\n\\n                    <div class=\\\"section-content\\\">\\n                        <form name=\\\"cardCommentForm\\\"\\n                              #newCommentForm=\\\"ngForm\\\" (submit)=\\\"addNewComment(newCommentForm)\\\"\\n                              class=\\\"comment new-comment\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\" no-validate>\\n\\n                            <div fxLayout=\\\"row\\\">\\n                                <img class=\\\"comment-member-avatar\\\" src=\\\"assets/images/avatars/profile.jpg\\\">\\n                                <mat-form-field fxFlex>\\n                                    <input matInput name=\\\"newComment\\\" ngModel #newComment=\\\"ngModel\\\"\\n                                           placeholder=\\\"Write a comment..\\\" required>\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n                                <button mat-raised-button class=\\\"mat-accent\\\"\\n                                        [disabled]=\\\"!newCommentForm.valid || newCommentForm.pristine\\\"\\n                                        aria-label=\\\"Add\\\">\\n                                    <span>Add</span>\\n                                </button>\\n                            </div>\\n                        </form>\\n\\n                        <div class=\\\"comment\\\" fxLayout=\\\"row\\\" *ngFor=\\\"let comment of card.comments\\\">\\n\\n                            <img class=\\\"comment-member-avatar\\\"\\n                                 [src]=\\\"board.members | getById: comment.idMember:'avatar'\\\">\\n\\n                            <div fxLayout=\\\"column\\\">\\n                                <div class=\\\"comment-member-name\\\">\\n                                    {{board.members | getById: comment.idMember:'name'}}\\n                                </div>\\n                                <div class=\\\"comment-bubble\\\">{{comment.message}}</div>\\n                                <div class=\\\"comment-time secondary-text\\\">{{comment.time}}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- / COMMENTS SECTION -->\\n\\n            <!-- ACTIVITIES SECTION -->\\n            <div *ngIf=\\\"card.activities[0]\\\" class=\\\"section\\\">\\n\\n                <div class=\\\"activities\\\">\\n\\n                    <div class=\\\"section-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                        <mat-icon class=\\\"s-20\\\">list</mat-icon>\\n                        <span class=\\\"section-title\\\">Activity</span>\\n                    </div>\\n\\n                    <div class=\\\"section-content\\\">\\n                        <div class=\\\"activity\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" *ngFor=\\\"let activity of card.activities\\\">\\n                            <img class=\\\"activity-member-avatar\\\"\\n                                 [src]=\\\"board.members| getById:activity.idMember:'avatar'\\\">\\n                            <div class=\\\"activity-member-name\\\">{{board.members| getById:activity.idMember:'name'}}</div>\\n                            <div class=\\\"activity-message\\\">{{activity.message}}</div>\\n                            <div class=\\\"activity-time secondary-text\\\">{{activity.time}}</div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n            <!-- / ACTIVITIES SECTION -->\\n\\n        </div>\\n        <!-- / SECTIONS -->\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/dialogs/card/card.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/dialogs/card/card.component.html\n// module chunks = scrumboard.module","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.scrumboard-card-dialog {\\n  width: 720px; }\\n@media screen and (max-width: 599px) {\\n    .scrumboard-card-dialog {\\n      width: 100%; } }\\n.scrumboard-card-dialog .mat-dialog-container {\\n    padding: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field {\\n      width: auto;\\n      margin: 0 8px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field .mat-form-field-wrapper {\\n        padding: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field .mat-form-field-wrapper .mat-form-field-flex {\\n          -webkit-box-align: center;\\n              -ms-flex-align: center;\\n                  align-items: center; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field .mat-form-field-wrapper .mat-form-field-flex .mat-form-field-infix {\\n            display: none; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-toolbar .due-date .mat-form-field .mat-form-field-wrapper .mat-form-field-flex .mat-input-element {\\n            display: none; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content {\\n      position: relative;\\n      background-color: #F5F5F5; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .card-breadcrumb {\\n        font-weight: 500;\\n        font-size: 14px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .card-subscribe {\\n        margin-right: 8px;\\n        color: rgba(0, 0, 0, 0.6); }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .picker {\\n        width: 140px;\\n        min-width: 140px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .card-name {\\n        width: 100%;\\n        font-size: 22px; }\\n@media screen and (max-width: 599px) {\\n          .scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .card-name {\\n            font-size: 14px; } }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .description {\\n        padding-bottom: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section {\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.12);\\n        margin-bottom: 32px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section:last-child {\\n          border-bottom: none;\\n          margin-bottom: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section:last-child .section-content {\\n            padding-bottom: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .section-header {\\n          font-size: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .section-header mat-icon {\\n            margin-right: 8px;\\n            color: rgba(0, 0, 0, 0.6); }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .section-header .section-title {\\n            font-weight: 500; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .section-content {\\n          padding: 24px 0 32px 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .labels .section-content {\\n          padding: 8px 0 32px 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .labels .label-chips {\\n          -webkit-box-shadow: none;\\n                  box-shadow: none;\\n          padding: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .labels .label-chips .label-chip {\\n            display: block; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .labels .label-chips .label-chip .chip-remove {\\n              cursor: pointer; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .members .section-content {\\n          padding: 8px 0 32px 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .members .member-chips {\\n          -webkit-box-shadow: none;\\n                  box-shadow: none;\\n          padding: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .members .member-chips .member-chip {\\n            padding: 4px 12px 4px 4px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .members .member-chips .member-chip .member-chip-avatar {\\n              width: 32px;\\n              border-radius: 50%; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .members .member-chips .member-chip .chip-remove {\\n              cursor: pointer; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment {\\n          margin-bottom: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-preview {\\n            background-color: #EEF0F2;\\n            width: 160px;\\n            height: 128px;\\n            background-size: contain;\\n            background-position: 50% 50%;\\n            background-repeat: no-repeat;\\n            font-weight: 500;\\n            color: rgba(0, 0, 0, 0.6);\\n            margin-right: 24px; }\\n@media screen and (max-width: 599px) {\\n              .scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-preview {\\n                margin-bottom: 24px; } }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-url,\\n          .scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-name {\\n            font-weight: 500;\\n            font-size: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-is-cover {\\n            margin-left: 6px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-time {\\n            color: rgba(0, 0, 0, 0.6); }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-actions-button {\\n            background-color: white;\\n            text-transform: capitalize;\\n            margin: 12px 0 0 0;\\n            padding-left: 12px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .attachment .attachment-content .attachment-actions-button mat-icon {\\n              margin-left: 8px;\\n              color: rgba(0, 0, 0, 0.6); }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .add-attachment-button {\\n          margin: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .add-attachment-button mat-icon {\\n            color: rgba(0, 0, 0, 0.6);\\n            margin-right: 8px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .attachments .add-attachment-button span {\\n            font-weight: 500;\\n            text-transform: capitalize; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .checklist-progress {\\n          margin-bottom: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .checklist-progress .checklist-progress-value {\\n            margin-right: 12px;\\n            font-weight: 500;\\n            white-space: nowrap;\\n            font-size: 14px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .editable-wrap {\\n          -webkit-box-flex: 1;\\n              -ms-flex: 1;\\n                  flex: 1; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .check-items .check-item mat-checkbox {\\n          margin-bottom: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .check-items .check-item mat-checkbox .mat-label {\\n            font-size: 14px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .check-items .check-item mat-checkbox.mat-checked .mat-label {\\n            text-decoration: line-through;\\n            color: rgba(0, 0, 0, 0.6); }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .new-check-item-form {\\n          padding-top: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .new-check-item-form mat-form-field {\\n            margin: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .checklist .new-check-item-form .mat-button {\\n            margin: 0 0 0 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment {\\n          margin-bottom: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-member-avatar {\\n            width: 32px;\\n            height: 32px;\\n            border-radius: 50%;\\n            margin-right: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-member-name {\\n            font-size: 14px;\\n            font-weight: 500; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-time {\\n            font-size: 12px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-bubble {\\n            position: relative;\\n            padding: 8px;\\n            background-color: white;\\n            border: 1px solid #dcdfe1;\\n            font-size: 14px;\\n            margin: 4px 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-bubble:after, .scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-bubble:before {\\n              content: ' ';\\n              position: absolute;\\n              width: 0;\\n              height: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-bubble:after {\\n              left: -7px;\\n              right: auto;\\n              top: 0px;\\n              bottom: auto;\\n              border: 11px solid;\\n              border-color: white transparent transparent transparent; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment .comment-bubble:before {\\n              left: -9px;\\n              right: auto;\\n              top: -1px;\\n              bottom: auto;\\n              border: 8px solid;\\n              border-color: #dcdfe1 transparent transparent transparent; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .comments .comment.new-comment mat-form-field {\\n            margin: 0; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .activities .activity {\\n          margin-bottom: 12px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .activities .activity .activity-member-avatar {\\n            width: 24px;\\n            height: 24px;\\n            border-radius: 50%;\\n            margin-right: 16px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .activities .activity .activity-member-name {\\n            font-size: 14px;\\n            font-weight: 500;\\n            margin-right: 8px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .activities .activity .activity-message {\\n            font-size: 14px;\\n            margin-right: 8px; }\\n.scrumboard-card-dialog .mat-dialog-container .mat-dialog-content .sections .section .activities .activity .activity-time {\\n            font-size: 12px; }\\n.scrumboard-card-dialog .dialog-content-wrapper {\\n    max-height: 85vh;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column; }\\n.scrumboard-members-menu {\\n  width: 240px; }\\n.scrumboard-members-menu .mat-checkbox-layout,\\n  .scrumboard-members-menu .mat-checkbox-label {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1; }\\n.scrumboard-labels-menu .mat-menu-content {\\n  padding-bottom: 0; }\\n.scrumboard-labels-menu .mat-menu-content .mat-checkbox-layout,\\n  .scrumboard-labels-menu .mat-menu-content .mat-checkbox-label {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1; }\\n.scrumboard-labels-menu .mat-menu-content .views {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    position: relative;\\n    overflow: hidden;\\n    width: 240px;\\n    min-width: 240px;\\n    max-width: 240px;\\n    min-height: 240px; }\\n.scrumboard-labels-menu .mat-menu-content .views .view {\\n      position: absolute;\\n      width: 240px;\\n      height: 100%;\\n      bottom: 0;\\n      left: 0;\\n      right: 0;\\n      top: 0; }\\n.scrumboard-labels-menu .mat-menu-content .views .view > .header {\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.1); }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/dialogs/card/card.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/dialogs/card/card.component.scss\n// module chunks = scrumboard.module","import { Component, Inject, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NgForm } from '@angular/forms/src/forms';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatMenuTrigger } from '@angular/material';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\nimport { FuseUtils } from '@fuse/utils';\n\nimport { ScrumboardService } from '../../../scrumboard.service';\n\n@Component({\n    selector     : 'fuse-scrumboard-board-card-dialog',\n    templateUrl  : './card.component.html',\n    styleUrls    : ['./card.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FuseScrumboardCardDialogComponent implements OnInit, OnDestroy\n{\n    card: any;\n    board: any;\n    list: any;\n\n    onBoardChanged: Subscription;\n    toggleInArray = FuseUtils.toggleInArray;\n\n    @ViewChild('checklistMenuTrigger') checklistMenu: MatMenuTrigger;\n    @ViewChild('newCheckListTitleField') newCheckListTitleField;\n\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n\n    constructor(\n        public dialogRef: MatDialogRef<FuseScrumboardCardDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) private data: any,\n        public dialog: MatDialog,\n        private scrumboardService: ScrumboardService\n    )\n    {\n\n    }\n\n    ngOnInit()\n    {\n        this.onBoardChanged =\n            this.scrumboardService.onBoardChanged\n                .subscribe(board => {\n                    this.board = board;\n\n                    this.card = this.board.cards.find((_card) => {\n                        return this.data.cardId === _card.id;\n                    });\n\n                    this.list = this.board.lists.find((_list) => {\n                        return this.data.listId === _list.id;\n                    });\n                });\n    }\n\n    /**\n     * Remove Due date\n     */\n    removeDueDate()\n    {\n        this.card.due = '';\n        this.updateCard();\n    }\n\n    /**\n     * Toggle Subscribe\n     */\n    toggleSubscribe()\n    {\n        this.card.subscribed = !this.card.subscribed;\n\n        this.updateCard();\n    }\n\n    /**\n     * Toggle Cover Image\n     * @param attachmentId\n     */\n    toggleCoverImage(attachmentId)\n    {\n        if ( this.card.idAttachmentCover === attachmentId )\n        {\n            this.card.idAttachmentCover = '';\n        }\n        else\n        {\n            this.card.idAttachmentCover = attachmentId;\n        }\n\n        this.updateCard();\n    }\n\n    /**\n     * Remove Attachment\n     * @param attachment\n     */\n    removeAttachment(attachment)\n    {\n        if ( attachment.id === this.card.idAttachmentCover )\n        {\n            this.card.idAttachmentCover = '';\n        }\n\n        this.card.attachments.splice(this.card.attachments.indexOf(attachment), 1);\n\n        this.updateCard();\n    }\n\n    /**\n     * Remove Checklist\n     * @param checklist\n     */\n    removeChecklist(checklist)\n    {\n        this.card.checklists.splice(this.card.checklists.indexOf(checklist), 1);\n\n        this.updateCard();\n    }\n\n    /**\n     * Update Checked Count\n     * @param list\n     */\n    updateCheckedCount(list)\n    {\n        const checkItems = list.checkItems;\n        let checkedItems = 0;\n        let allCheckedItems = 0;\n        let allCheckItems = 0;\n\n        for ( const checkItem of checkItems )\n        {\n            if ( checkItem.checked )\n            {\n                checkedItems++;\n            }\n        }\n\n        list.checkItemsChecked = checkedItems;\n\n        for ( const item of this.card.checklists )\n        {\n            allCheckItems += item.checkItems.length;\n            allCheckedItems += item.checkItemsChecked;\n        }\n\n        this.card.checkItems = allCheckItems;\n        this.card.checkItemsChecked = allCheckedItems;\n\n        this.updateCard();\n    }\n\n    /**\n     * Remove Checklist Item\n     * @param checkItem\n     * @param checklist\n     */\n    removeChecklistItem(checkItem, checklist)\n    {\n        checklist.checkItems.splice(checklist.checkItems.indexOf(checkItem), 1);\n\n        this.updateCheckedCount(checklist);\n\n        this.updateCard();\n    }\n\n    /**\n     * Add Check Item\n     * @param {NgForm} form\n     * @param checkList\n     */\n    addCheckItem(form: NgForm, checkList)\n    {\n        const checkItemVal = form.value.checkItem;\n\n        if ( !checkItemVal || checkItemVal === '' )\n        {\n            return;\n        }\n\n        const newCheckItem = {\n            'name'   : checkItemVal,\n            'checked': false\n        };\n\n        checkList.checkItems.push(newCheckItem);\n\n        this.updateCheckedCount(checkList);\n\n        form.setValue({checkItem: ''});\n\n        this.updateCard();\n    }\n\n    /**\n     * Add Checklist\n     * @param {NgForm} form\n     */\n    addChecklist(form: NgForm)\n    {\n        this.card.checklists.push({\n            id               : FuseUtils.generateGUID(),\n            name             : form.value.checklistTitle,\n            checkItemsChecked: 0,\n            checkItems       : []\n        });\n\n        form.setValue({checklistTitle: ''});\n        form.resetForm();\n        this.checklistMenu.closeMenu();\n        this.updateCard();\n    }\n\n    /**\n     * On Checklist Menu Open\n     */\n    onChecklistMenuOpen()\n    {\n        setTimeout(() => {\n            this.newCheckListTitleField.nativeElement.focus();\n        });\n    }\n\n    /**\n     * Add New Comment\n     * @param {NgForm} form\n     */\n    addNewComment(form: NgForm)\n    {\n        const newCommentText = form.value.newComment;\n\n        const newComment = {\n            idMember: '36027j1930450d8bf7b10158',\n            message : newCommentText,\n            time    : 'now'\n        };\n\n        this.card.comments.unshift(newComment);\n\n        form.setValue({newComment: ''});\n\n        this.updateCard();\n    }\n\n    /**\n     * Remove Card\n     */\n    removeCard()\n    {\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n            disableClose: false\n        });\n\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the card?';\n\n        this.confirmDialogRef.afterClosed().subscribe(result => {\n            if ( result )\n            {\n                this.dialogRef.close();\n                this.scrumboardService.removeCard(this.card.id, this.list.id);\n            }\n        });\n    }\n\n    /**\n     * Update Card\n     */\n    updateCard()\n    {\n        this.scrumboardService.updateCard(this.card);\n    }\n\n    ngOnDestroy()\n    {\n        this.onBoardChanged.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/dialogs/card/card.component.ts","module.exports = \"<div [ngSwitch]=\\\"labelsMenuView\\\" class=\\\"views\\\" (click)=\\\"$event.stopPropagation()\\\">\\n\\n    <div class=\\\"view\\\" *ngSwitchCase=\\\"'labels'\\\" fxFlex fxLayout=\\\"column\\\">\\n\\n        <div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <div>Labels</div>\\n            <button mat-button (click)=\\\"labelsMenuView ='add'\\\">\\n                <mat-icon class=\\\"s-16\\\">add</mat-icon>\\n                <span>Add</span>\\n            </button>\\n        </div>\\n\\n        <div fxFlex fxLayout=\\\"column\\\" fusePerfectScrollbar>\\n\\n            <div class=\\\"label\\\" *ngFor=\\\"let label of board.labels\\\" fxFlex=\\\"0 0 auto\\\" fxLayout=\\\"row\\\" fxFlexAlign=\\\"space-between center\\\"\\n                 [ngClass]=\\\"label.color\\\">\\n\\n                <mat-checkbox fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" [checked]=\\\"card.idLabels.indexOf(label.id) > -1\\\"\\n                              (change)=\\\"toggleInArray(label.id, card.idLabels);cardLabelsChanged()\\\">\\n                    {{label.name}}\\n                </mat-checkbox>\\n\\n                <button mat-icon-button>\\n                    <mat-icon class=\\\"s-16\\\" (click)=\\\"labelsMenuView ='edit';selectedLabel = label\\\">mode_edit</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"view edit\\\" *ngSwitchCase=\\\"'edit'\\\" fxFlex fxLayout=\\\"column\\\">\\n\\n        <div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <button mat-icon-button (click)=\\\"labelsMenuView ='labels'\\\">\\n                <mat-icon class=\\\"s-16\\\">arrow_back</mat-icon>\\n            </button>\\n            <div>Edit Label</div>\\n        </div>\\n\\n        <div class=\\\"content\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedLabel.name\\\" (change)=\\\"onLabelChange()\\\">\\n            </mat-form-field>\\n\\n            <fuse-material-color-picker [(selectedClass)]=\\\"selectedLabel.color\\\" class=\\\"ml-8\\\" (change)=\\\"$event.preventDefault;onLabelChange()\\\"></fuse-material-color-picker>\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"view add\\\" *ngSwitchCase=\\\"'add'\\\" fxFlex fxLayout=\\\"column\\\">\\n\\n        <div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <button mat-icon-button (click)=\\\"labelsMenuView ='labels'\\\">\\n                <mat-icon class=\\\"s-16\\\">arrow_back</mat-icon>\\n            </button>\\n            <div>Add Label</div>\\n        </div>\\n\\n        <form (submit)=\\\"addNewLabel()\\\" #newLabelForm=\\\"ngForm\\\" fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start end\\\">\\n\\n            <div fxFlex=\\\"0 1 auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                <mat-form-field fxFlex>\\n                    <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"newLabel.name\\\" name=\\\"labelName\\\" required>\\n                </mat-form-field>\\n\\n                <fuse-material-color-picker class=\\\"ml-8\\\" [(selectedClass)]=\\\"newLabel.color\\\" name=\\\"labelColor\\\"></fuse-material-color-picker>\\n            </div>\\n\\n            <button mat-raised-button class=\\\"mat-accent mt-16\\\" [disabled]=\\\"!newLabelForm.valid\\\">ADD NEW LABEL</button>\\n        </form>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.html\n// module chunks = scrumboard.module","module.exports = \".scrumboard-labels-menu .mat-menu-content {\\n  padding-bottom: 0; }\\n  .scrumboard-labels-menu .mat-menu-content .mat-checkbox-layout,\\n  .scrumboard-labels-menu .mat-menu-content .mat-checkbox-label {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1; }\\n  .scrumboard-labels-menu .mat-menu-content .views {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    position: relative;\\n    overflow: hidden;\\n    width: 240px;\\n    min-width: 240px;\\n    max-width: 240px;\\n    min-height: 240px; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view {\\n      position: absolute;\\n      width: 240px;\\n      height: 100%;\\n      bottom: 0;\\n      left: 0;\\n      right: 0;\\n      top: 0; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view > .header {\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n        padding: 4px 8px 8px 16px;\\n        margin-bottom: 8px; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view .label {\\n        margin: 0 8px 8px 8px;\\n        padding: 4px 4px 4px 16px; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view.edit > .header, .scrumboard-labels-menu .mat-menu-content .views .view.add > .header {\\n        padding: 0 8px 8px 0; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view.edit form, .scrumboard-labels-menu .mat-menu-content .views .view.add form {\\n        padding: 0 16px 8px 16px; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view.edit form .mat-form-field-infix, .scrumboard-labels-menu .mat-menu-content .views .view.add form .mat-form-field-infix {\\n          width: auto !important; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view.edit .content, .scrumboard-labels-menu .mat-menu-content .views .view.add .content {\\n        padding: 8px 16px 8px 16px; }\\n  .scrumboard-labels-menu .mat-menu-content .views .view.edit .content .mat-form-field-infix, .scrumboard-labels-menu .mat-menu-content .views .view.add .content .mat-form-field-infix {\\n          width: auto !important; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.scss\n// module chunks = scrumboard.module","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseUtils } from '@fuse/utils';\n\nimport { ScrumboardService } from '../../../../scrumboard.service';\n\n@Component({\n    selector     : 'fuse-scrumboard-label-selector',\n    templateUrl  : './label-selector.component.html',\n    styleUrls    : ['./label-selector.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\n\nexport class FuseScrumboardLabelSelectorComponent implements OnInit, OnDestroy\n{\n    board: any;\n    @Input('card') card: any;\n    @Output() onCardLabelsChange = new EventEmitter();\n\n    labelsMenuView = 'labels';\n    selectedLabel: any;\n    newLabel = {\n        'id'   : '',\n        'name' : '',\n        'color': 'mat-blue-400-bg'\n    };\n    toggleInArray = FuseUtils.toggleInArray;\n\n    onBoardChanged: Subscription;\n\n    constructor(\n        private scrumboardService: ScrumboardService\n    )\n    {\n    }\n\n    ngOnInit()\n    {\n        this.onBoardChanged =\n            this.scrumboardService.onBoardChanged\n                .subscribe(board => {\n                    this.board = board;\n                });\n    }\n\n    ngOnDestroy()\n    {\n        this.onBoardChanged.unsubscribe();\n    }\n\n    cardLabelsChanged()\n    {\n        this.onCardLabelsChange.next();\n    }\n\n    onLabelChange()\n    {\n        this.scrumboardService.updateBoard();\n    }\n\n    addNewLabel()\n    {\n        this.newLabel.id = FuseUtils.generateGUID();\n        this.board.labels.push(Object.assign({}, this.newLabel));\n        this.newLabel.name = '';\n        this.labelsMenuView = 'labels';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/dialogs/card/label-selector/label-selector.component.ts","module.exports = \"<div *ngIf=\\\"!formActive\\\" class=\\\"board-name\\\" fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n    <span>{{board.name}}</span>\\n    <button mat-icon-button (click)=\\\"openForm()\\\">\\n        <mat-icon class=\\\"s-16\\\">edit_mode</mat-icon>\\n    </button>\\n</div>\\n\\n\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onFormSubmit()\\\"\\n      class=\\\"board-name-form\\\" fxLayout=\\\"row\\\" fxFlex=\\\"1 0 auto\\\" *ngIf=\\\"formActive\\\">\\n\\n    <input formControlName=\\\"name\\\" #nameInput fxFlex=\\\"1 0 auto\\\" placeholder=\\\"Write a board name\\\">\\n\\n    <button mat-icon-button fxFlex=\\\"0 1 auto\\\">\\n        <mat-icon>check</mat-icon>\\n    </button>\\n    <button mat-icon-button fxFlex=\\\"0 1 auto\\\" (click)=\\\"closeForm()\\\" type=\\\"button\\\">\\n        <mat-icon>close</mat-icon>\\n    </button>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/edit-board-name/edit-board-name.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/edit-board-name/edit-board-name.component.html\n// module chunks = scrumboard.module","module.exports = \":host {\\n  display: block !important; }\\n  :host .board-name {\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    font-size: 15px;\\n    font-weight: 500; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/edit-board-name/edit-board-name.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/edit-board-name/edit-board-name.component.scss\n// module chunks = scrumboard.module","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n    selector   : 'fuse-scrumboard-edit-board-name',\n    templateUrl: './edit-board-name.component.html',\n    styleUrls  : ['./edit-board-name.component.scss']\n})\nexport class FuseScrumboardEditBoardNameComponent\n{\n    formActive = false;\n    form: FormGroup;\n    @Input() board;\n    @Output() onNameChanged = new EventEmitter();\n    @ViewChild('nameInput') nameInputField;\n\n    constructor(\n        private formBuilder: FormBuilder\n    )\n    {\n    }\n\n    openForm()\n    {\n        this.form = this.formBuilder.group({\n            name: [this.board.name]\n        });\n        this.formActive = true;\n        this.focusNameField();\n    }\n\n    closeForm()\n    {\n        this.formActive = false;\n    }\n\n    focusNameField()\n    {\n        setTimeout(() => {\n            this.nameInputField.nativeElement.focus();\n        });\n    }\n\n    onFormSubmit()\n    {\n        if ( this.form.valid )\n        {\n            this.board.name = this.form.getRawValue().name;\n            this.board.uri = encodeURIComponent(this.board.name).replace(/%20/g, '-').toLowerCase();\n\n            this.onNameChanged.next(this.board.name);\n            this.formActive = false;\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/edit-board-name/edit-board-name.component.ts","module.exports = \"<div *ngIf=\\\"!formActive\\\" class=\\\"add-card-button\\\"\\n     (click)=\\\"openForm()\\\"\\n     fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n    <div>\\n        <mat-icon class=\\\"s-20\\\">add</mat-icon>\\n    </div>\\n    <span>Add a card</span>\\n</div>\\n\\n<div *ngIf=\\\"formActive\\\" class=\\\"add-card-form-wrapper\\\">\\n\\n    <form [formGroup]=\\\"form\\\" (submit)=\\\"onFormSubmit()\\\" class=\\\"add-card-form\\\" fxLayout=\\\"column\\\">\\n\\n        <mat-form-field fxFlex floatPlaceholder=\\\"never\\\">\\n            <input #nameInput matInput formControlName=\\\"name\\\" placeholder=\\\"Card title\\\" autocomplete=\\\"off\\\" required>\\n        </mat-form-field>\\n\\n        <div class=\\\"pl-8\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n            <button mat-raised-button class=\\\"add-button mat-accent\\\" aria-label=\\\"add\\\"\\n                    [disabled]=\\\"form.invalid\\\">\\n                <span>Add</span>\\n            </button>\\n\\n            <button mat-icon-button (click)=\\\"closeForm()\\\" class=\\\"cancel-button\\\" aria-label=\\\"cancel\\\">\\n                <mat-icon>close</mat-icon>\\n            </button>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/list/add-card/add-card.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/list/add-card/add-card.component.html\n// module chunks = scrumboard.module","module.exports = \":host .add-card-button {\\n  position: relative;\\n  height: 48px;\\n  min-height: 48px;\\n  padding: 0 16px;\\n  text-align: left;\\n  text-transform: none;\\n  font-weight: 500;\\n  font-size: 14px;\\n  background-color: #DCDFE2;\\n  cursor: pointer;\\n  border-radius: 2px; }\\n  :host .add-card-button mat-icon {\\n    margin-right: 8px;\\n    color: rgba(0, 0, 0, 0.6); }\\n  :host .add-card-form-wrapper {\\n  background-color: #DCDFE2; }\\n  :host .add-card-form-wrapper .add-card-form {\\n    z-index: 999;\\n    background: white;\\n    display: block;\\n    position: relative;\\n    padding: 8px;\\n    border-top: 1px solid rgba(0, 0, 0, 0.12); }\\n  :host .add-card-form-wrapper .add-card-form mat-form-field {\\n      width: 100%;\\n      margin: 0;\\n      padding: 12px 8px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/list/add-card/add-card.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/list/add-card/add-card.component.scss\n// module chunks = scrumboard.module","import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n    selector   : 'fuse-scrumboard-board-add-card',\n    templateUrl: './add-card.component.html',\n    styleUrls  : ['./add-card.component.scss']\n})\nexport class FuseScrumboardBoardAddCardComponent\n{\n    formActive = false;\n    form: FormGroup;\n    @Output() onCardAdd = new EventEmitter();\n    @ViewChild('nameInput') nameInputField;\n\n    constructor(\n        private formBuilder: FormBuilder\n    )\n    {\n    }\n    \n    openForm()\n    {\n        this.form = this.formBuilder.group({\n            name: ''\n        });\n        this.formActive = true;\n        this.focusNameField();\n    }\n\n    closeForm()\n    {\n        this.formActive = false;\n    }\n\n    focusNameField()\n    {\n        setTimeout(() => {\n            this.nameInputField.nativeElement.focus();\n        });\n    }\n\n    onFormSubmit()\n    {\n        if ( this.form.valid )\n        {\n            const cardName = this.form.getRawValue().name;\n            this.onCardAdd.next(cardName);\n            this.formActive = false;\n        }\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/list/add-card/add-card.component.ts","module.exports = \"<!-- CARD COVER -->\\n<div *ngIf=\\\"board.settings.cardCoverImages && card.idAttachmentCover\\\"\\n     class=\\\"list-card-cover\\\">\\n    <img [src]=\\\"card.attachments | getById:card.idAttachmentCover:'src'\\\">\\n</div>\\n<!-- / CARD COVER -->\\n\\n<!-- CARD DETAILS -->\\n<div class=\\\"list-card-details\\\">\\n\\n    <!-- CARD SORT HANDLE -->\\n    <div class=\\\"list-card-sort-handle\\\">\\n        <mat-icon mat-font-icon=\\\"icon-cursor-move\\\" class=\\\"icon s16\\\"></mat-icon>\\n    </div>\\n    <!-- /CARD SORT HANDLE -->\\n\\n    <!-- CARD LABELS -->\\n    <div *ngIf=\\\"card.idLabels.length > 0\\\" class=\\\"list-card-labels\\\" fxLayout=\\\"row wrap\\\">\\n\\n        <span class=\\\"list-card-label\\\"\\n              [ngClass]=\\\"board.labels | getById:labelId:'color'\\\"\\n              *ngFor=\\\"let labelId of card.idLabels\\\"\\n              [matTooltip]=\\\"board.labels | getById:labelId:'name'\\\">\\n        </span>\\n\\n    </div>\\n    <!-- / CARD LABELS -->\\n\\n    <!-- CARD NAME -->\\n    <div class=\\\"list-card-name\\\">{{card.name}}</div>\\n    <!-- / CARD NAME -->\\n\\n    <div *ngIf=\\\"card.due || card.checkItems\\\"\\n         class=\\\"list-card-badges\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n        <!-- CARD DUE -->\\n        <span class=\\\"badge due-date\\\"\\n              [ngClass]=\\\"{'overdue': isOverdue(card.due)}\\\"\\n              *ngIf=\\\"card.due\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-icon class=\\\"s-16\\\">access_time</mat-icon>\\n            <span>{{card.due | date:'mediumDate'}}</span>\\n\\n        </span>\\n        <!-- / CARD DUE -->\\n\\n        <!-- CARD CHECK ITEMS STATUS -->\\n        <span *ngIf=\\\"card.checkItems\\\"\\n              class=\\\"badge check-items\\\"\\n              [ngClass]=\\\"{'completed': card.checkItemsChecked === card.checkItems}\\\"\\n              fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-icon class=\\\"s-16\\\">check_circle</mat-icon>\\n            <span>{{card.checkItemsChecked}}</span>\\n            <span>/</span>\\n            <span>{{card.checkItems}}</span>\\n        </span>\\n        <!-- / CARD CHECK ITEMS STATUS -->\\n\\n    </div>\\n\\n    <!-- CARD MEMBERS -->\\n    <div *ngIf=\\\"card.idMembers.length > 0\\\"\\n         class=\\\"list-card-members\\\"\\n         fxLayout=\\\"row\\\">\\n\\n        <div class=\\\"list-card-member\\\"\\n             *ngFor=\\\"let memberId of card.idMembers\\\">\\n\\n            <img class=\\\"list-card-member-avatar\\\"\\n                 [src]=\\\"board.members | getById:memberId:'avatar'\\\"\\n                 [matTooltip]=\\\"board.members | getById:memberId:'name'\\\">\\n        </div>\\n\\n    </div>\\n    <!-- / CARD MEMBERS -->\\n\\n</div>\\n<!-- / CARD DETAILS -->\\n\\n<!-- CARD FOOTER -->\\n<div class=\\\"list-card-footer\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n        <!-- CARD SUBSCRIBE -->\\n        <span *ngIf=\\\"card.subscribed\\\" class=\\\"list-card-footer-item\\\"\\n              fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-icon class=\\\"s-18\\\">remove_red_eye</mat-icon>\\n        </span>\\n        <!-- / CARD SUBSCRIBE -->\\n\\n        <!-- CARD DETAILS -->\\n        <span *ngIf=\\\"card.description !== ''\\\"\\n              class=\\\"list-card-footer-item\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-icon class=\\\"s-18\\\">description</mat-icon>\\n        </span>\\n        <!-- / CARD DETAILS -->\\n\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n\\n        <!-- CARD ATTACHMENT -->\\n        <span *ngIf=\\\"card.attachments\\\"\\n              class=\\\"list-card-footer-item\\\"\\n              fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-icon class=\\\"s-18\\\">attachment</mat-icon>\\n            <span class=\\\"value\\\">{{card.attachments.length}}</span>\\n        </span>\\n        <!-- / CARD ATTACHMENT -->\\n\\n        <!-- CARD COMMENTS -->\\n        <span *ngIf=\\\"card.comments\\\"\\n              class=\\\"list-card-footer-item\\\"\\n              fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-icon class=\\\"s-18\\\">comment</mat-icon>\\n            <span class=\\\"value\\\">{{card.comments.length}}</span>\\n        </span>\\n        <!-- / CARD COMMENTS -->\\n\\n    </div>\\n</div>\\n<!-- CARD FOOTER -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/list/card/card.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/list/card/card.component.html\n// module chunks = scrumboard.module","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.scrumboard-board-card {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  margin: 16px 0 !important;\\n  background-color: white !important;\\n  color: #000;\\n  border-radius: 2px;\\n  -webkit-transition: -webkit-box-shadow 150ms ease;\\n  transition: -webkit-box-shadow 150ms ease;\\n  transition: box-shadow 150ms ease;\\n  transition: box-shadow 150ms ease, -webkit-box-shadow 150ms ease;\\n  cursor: pointer; }\\n.scrumboard-board-card .list-card-sort-handle {\\n    display: none;\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 4px;\\n    background: rgba(255, 255, 255, 0.8); }\\n.scrumboard-board-card .list-card-details {\\n    padding: 16px 16px 0 16px; }\\n.scrumboard-board-card .list-card-details .list-card-labels {\\n      margin-bottom: 6px; }\\n.scrumboard-board-card .list-card-details .list-card-labels .list-card-label {\\n        width: 32px;\\n        height: 6px;\\n        border-radius: 6px;\\n        margin: 0 6px 6px 0; }\\n.scrumboard-board-card .list-card-details .list-card-name {\\n      font-size: 14px;\\n      font-weight: 500;\\n      margin-bottom: 12px; }\\n.scrumboard-board-card .list-card-details .list-card-badges {\\n      margin-bottom: 12px; }\\n.scrumboard-board-card .list-card-details .list-card-badges .badge {\\n        margin-right: 8px;\\n        padding: 4px 8px;\\n        border-radius: 2px;\\n        background-color: rgba(0, 0, 0, 0.4);\\n        color: #FFFFFF; }\\n.scrumboard-board-card .list-card-details .list-card-badges .badge mat-icon {\\n          margin-right: 4px; }\\n.scrumboard-board-card .list-card-details .list-card-badges .badge.due-date {\\n          background-color: #4caf50; }\\n.scrumboard-board-card .list-card-details .list-card-badges .badge.due-date.overdue {\\n            background-color: #f44336; }\\n.scrumboard-board-card .list-card-details .list-card-badges .badge.check-items.completed {\\n          background-color: #4caf50; }\\n.scrumboard-board-card .list-card-details .list-card-members {\\n      margin-bottom: 12px; }\\n.scrumboard-board-card .list-card-details .list-card-members .list-card-member {\\n        margin-right: 8px; }\\n.scrumboard-board-card .list-card-details .list-card-members .list-card-member .list-card-member-avatar {\\n          border-radius: 50%;\\n          width: 32px;\\n          height: 32px; }\\n.scrumboard-board-card .list-card-footer {\\n    border-top: 1px solid rgba(0, 0, 0, 0.12);\\n    padding: 0 16px; }\\n.scrumboard-board-card .list-card-footer .list-card-footer-item {\\n      height: 48px;\\n      margin-right: 12px;\\n      color: rgba(0, 0, 0, 0.66); }\\n.scrumboard-board-card .list-card-footer .list-card-footer-item .value {\\n        padding-left: 8px; }\\n.scrumboard-board-card .list-card-footer .list-card-footer-item:last-of-type {\\n        margin-right: 0; }\\n.scrumboard-board-card .ngx-dnd-content {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none; }\\n.scrumboard-board-card.gu-mirror {\\n    position: fixed !important;\\n    margin: 0 !important;\\n    z-index: 9999 !important;\\n    opacity: 0.8;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\\\";\\n    filter: alpha(opacity=80);\\n    -webkit-box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\\n            box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.scrumboard-board-card.gu-hide {\\n    display: none !important; }\\n.scrumboard-board-card.gu-unselectable {\\n    -webkit-user-select: none !important;\\n    -moz-user-select: none !important;\\n    -ms-user-select: none !important;\\n    user-select: none !important; }\\n.scrumboard-board-card.gu-transit {\\n    opacity: 0.2;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)\\\";\\n    filter: alpha(opacity=20); }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/list/card/card.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/list/card/card.component.scss\n// module chunks = scrumboard.module","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\n\n@Component({\n    selector     : 'fuse-scrumboard-board-card',\n    templateUrl  : './card.component.html',\n    styleUrls    : ['./card.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FuseScrumboardBoardCardComponent implements OnInit\n{\n    @Input() cardId;\n    card: any;\n    board: any;\n\n    constructor(\n        private route: ActivatedRoute,\n    )\n    {\n    }\n\n    ngOnInit()\n    {\n        this.board = this.route.snapshot.data.board;\n        this.card = this.board.cards.filter((card) => {\n            return this.cardId === card.id;\n        })[0];\n    }\n\n    /**\n     * Is the card overdue?\n     *\n     * @param cardDate\n     * @returns {boolean}\n     */\n    isOverdue(cardDate)\n    {\n        return moment() > moment(new Date(cardDate));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/list/card/card.component.ts","module.exports = \"<div fxFlex=\\\"1 0 auto\\\" *ngIf=\\\"!formActive\\\" class=\\\"list-header-name\\\" (click)=\\\"openForm()\\\">\\n    {{list.name}}\\n</div>\\n\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onFormSubmit()\\\"\\n      class=\\\"list-header-name-form\\\" fxLayout=\\\"row\\\" fxFlex=\\\"1 0 auto\\\"\\n      *ngIf=\\\"formActive\\\">\\n\\n    <input formControlName=\\\"name\\\" #nameInput fxFlex placeholder=\\\"Write a list Name\\\">\\n\\n    <button mat-icon-button fxFlex=\\\"0 1 auto\\\">\\n        <mat-icon>check</mat-icon>\\n    </button>\\n    <button mat-icon-button fxFlex=\\\"0 1 auto\\\" (click)=\\\"closeForm()\\\" type=\\\"button\\\">\\n        <mat-icon>close</mat-icon>\\n    </button>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.html\n// module chunks = scrumboard.module","module.exports = \":host .list-header-name {\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  font-size: 15px;\\n  font-weight: 500;\\n  cursor: pointer; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.scss\n// module chunks = scrumboard.module","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n    selector   : 'fuse-scrumboard-board-edit-list-name',\n    templateUrl: './edit-list-name.component.html',\n    styleUrls  : ['./edit-list-name.component.scss']\n})\nexport class FuseScrumboardBoardEditListNameComponent\n{\n    formActive = false;\n    form: FormGroup;\n    @Input() list;\n    @Output() onNameChanged = new EventEmitter();\n    @ViewChild('nameInput') nameInputField;\n\n    constructor(\n        private formBuilder: FormBuilder\n    )\n    {\n    }\n\n    openForm()\n    {\n        this.form = this.formBuilder.group({\n            name: [this.list.name]\n        });\n        this.formActive = true;\n        this.focusNameField();\n    }\n\n    closeForm()\n    {\n        this.formActive = false;\n    }\n\n    focusNameField()\n    {\n        setTimeout(() => {\n            this.nameInputField.nativeElement.focus();\n        });\n    }\n\n    onFormSubmit()\n    {\n        if ( this.form.valid )\n        {\n            this.list.name = this.form.getRawValue().name;\n            this.onNameChanged.next(this.list.name);\n            this.formActive = false;\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/list/edit-list-name/edit-list-name.component.ts","module.exports = \"<div class=\\\"list mat-elevation-z1\\\" fxLayout=\\\"column\\\">\\n\\n    <!-- LIST HEADER -->\\n    <div class=\\\"list-header\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n        <fuse-scrumboard-board-edit-list-name\\n            fxFlex=\\\"1 0 auto\\\"\\n            [list]=\\\"list\\\"\\n            (onNameChanged)=\\\"onListNameChanged($event)\\\">\\n        </fuse-scrumboard-board-edit-list-name>\\n\\n        <div fxFlex=\\\"0 1 auto\\\">\\n            <button mat-icon-button class=\\\"list-header-option-button\\\" [matMenuTriggerFor]=\\\"listMenu\\\">\\n                <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #listMenu=\\\"matMenu\\\">\\n                <button mat-menu-item (click)=\\\"removeList(list.id)\\\">Remove List</button>\\n            </mat-menu>\\n        </div>\\n\\n    </div>\\n    <!-- / LIST HEADER -->\\n\\n    <!-- LIST CONTENT -->\\n    <div class=\\\"list-content\\\" fxLayout=\\\"column\\\">\\n\\n        <div class=\\\"list-cards ngx-dnd-container\\\"\\n             [model]=\\\"list.idCards\\\" ngxDroppable=\\\"card\\\" (out)=\\\"onDrop($event)\\\"\\n             fusePerfectScrollbar #listScroll>\\n            <fuse-scrumboard-board-card ngxDraggable\\n                                        (click)=\\\"openCardDialog(cardId)\\\"\\n                                        class=\\\"scrumboard-board-card mat-elevation-z2 ngx-dnd-item\\\"\\n                                        *ngFor=\\\"let cardId of list.idCards\\\"\\n                                        [model]=\\\"cardId\\\"\\n                                        [cardId]=\\\"cardId\\\">\\n            </fuse-scrumboard-board-card>\\n        </div>\\n    </div>\\n    <!-- / LIST CONTENT -->\\n\\n    <!-- NEW CARD BUTTON-->\\n    <div class=\\\"list-footer\\\">\\n        <fuse-scrumboard-board-add-card (onCardAdd)=\\\"onCardAdd($event)\\\">\\n        </fuse-scrumboard-board-add-card>\\n    </div>\\n    <!-- / NEW CARD BUTTON-->\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/list/list.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/list/list.component.html\n// module chunks = scrumboard.module","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.scrumboard-board-list {\\n  width: 344px;\\n  min-width: 344px;\\n  max-width: 344px;\\n  padding-right: 24px !important;\\n  height: 100%; }\\n.scrumboard-board-list .list {\\n    max-height: 100%;\\n    background-color: #EEF0F2;\\n    color: #000;\\n    border-radius: 2px;\\n    -webkit-transition: -webkit-box-shadow 150ms ease;\\n    transition: -webkit-box-shadow 150ms ease;\\n    transition: box-shadow 150ms ease;\\n    transition: box-shadow 150ms ease, -webkit-box-shadow 150ms ease; }\\n.scrumboard-board-list .list .list-header {\\n      height: 64px;\\n      min-height: 64px;\\n      padding: 0 8px 0 16px;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n@media (max-width: 959px) {\\n        .scrumboard-board-list .list .list-header {\\n          height: 48px;\\n          min-height: 48px; } }\\n.scrumboard-board-list .list .list-content {\\n      position: relative;\\n      overflow: hidden;\\n      overflow-y: auto;\\n      min-height: 0; }\\n.scrumboard-board-list .list .list-content .list-cards {\\n        position: relative;\\n        min-height: 32px;\\n        padding: 0 16px;\\n        background: #eeeeee !important; }\\n.scrumboard-board-list .list .list-footer {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-orient: vertical;\\n      -webkit-box-direction: normal;\\n          -ms-flex-direction: column;\\n              flex-direction: column;\\n      -webkit-box-flex: 1;\\n          -ms-flex: 1 0 auto;\\n              flex: 1 0 auto;\\n      min-height: 48px; }\\n.scrumboard-board-list .ngx-dnd-content {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none; }\\n.scrumboard-board-list.gu-mirror {\\n    position: fixed !important;\\n    margin: 0 !important;\\n    z-index: 9999 !important;\\n    opacity: 0.8;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\\\";\\n    filter: alpha(opacity=80); }\\n.scrumboard-board-list.gu-mirror > .list {\\n      -webkit-box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\\n              box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n.scrumboard-board-list.gu-hide {\\n    display: none !important; }\\n.scrumboard-board-list.gu-unselectable {\\n    -webkit-user-select: none !important;\\n    -moz-user-select: none !important;\\n    -ms-user-select: none !important;\\n    user-select: none !important; }\\n.scrumboard-board-list.gu-transit {\\n    opacity: 0.2;\\n    -ms-filter: \\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)\\\";\\n    filter: alpha(opacity=20); }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/list/list.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/list/list.component.scss\n// module chunks = scrumboard.module","import { Component, Input, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\nimport { FusePerfectScrollbarDirective } from '@fuse/directives/fuse-perfect-scrollbar/fuse-perfect-scrollbar.directive';\n\nimport { Card } from '../../card.model';\nimport { ScrumboardService } from '../../scrumboard.service';\nimport { FuseScrumboardCardDialogComponent } from '../dialogs/card/card.component';\n\n@Component({\n    selector     : 'fuse-scrumboard-board-list',\n    templateUrl  : './list.component.html',\n    styleUrls    : ['./list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FuseScrumboardBoardListComponent implements OnInit, OnDestroy\n{\n    board: any;\n    dialogRef: any;\n\n    @Input() list;\n    @ViewChild(FusePerfectScrollbarDirective) listScroll: FusePerfectScrollbarDirective;\n\n    onBoardChanged: Subscription;\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n\n    constructor(\n        private route: ActivatedRoute,\n        private scrumboardService: ScrumboardService,\n        public dialog: MatDialog\n    )\n    {\n    }\n\n    ngOnInit()\n    {\n        this.onBoardChanged =\n            this.scrumboardService.onBoardChanged\n                .subscribe(board => {\n                    this.board = board;\n                });\n    }\n\n    ngOnDestroy()\n    {\n        this.onBoardChanged.unsubscribe();\n    }\n\n    onListNameChanged(newListName)\n    {\n        this.list.name = newListName;\n    }\n\n    onCardAdd(newCardName)\n    {\n        if ( newCardName === '' )\n        {\n            return;\n        }\n\n        this.scrumboardService.addCard(this.list.id, new Card({name: newCardName}));\n\n        setTimeout(() => {\n            this.listScroll.scrollToBottom(0, 400);\n        });\n\n    }\n\n    removeList(listId)\n    {\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n            disableClose: false\n        });\n\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the list and it\\'s all cards?';\n\n        this.confirmDialogRef.afterClosed().subscribe(result => {\n            if ( result )\n            {\n                this.scrumboardService.removeList(listId);\n            }\n        });\n    }\n\n    openCardDialog(cardId)\n    {\n        this.dialogRef = this.dialog.open(FuseScrumboardCardDialogComponent, {\n            panelClass: 'scrumboard-card-dialog',\n            data      : {\n                cardId: cardId,\n                listId: this.list.id\n            }\n        });\n        this.dialogRef.afterClosed()\n            .subscribe(response => {\n\n            });\n    }\n\n    onDrop(ev)\n    {\n        this.scrumboardService.updateBoard();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/list/list.component.ts","module.exports = \"<mat-list class=\\\"colors\\\">\\n    <!-- COLORS -->\\n    <mat-list-item class=\\\"color m-8 mat-elevation-z1\\\"\\n                   [ngClass]=\\\"'mat-'+color.key+'-bg'\\\"\\n                   *ngFor=\\\"let color of (colors | keys)\\\"\\n                   (click)=\\\"setColor(color.key)\\\"\\n                   matRipple>\\n        <p fxFlex>{{color.key}}</p>\\n        <mat-icon class=\\\"s-16\\\" *ngIf=\\\"color.key === board.settings.color\\\">check</mat-icon>\\n        <button mat-icon-button *ngIf=\\\"color.key === board.settings.color\\\" (click)=\\\"$event.stopPropagation();setColor('')\\\">\\n            <mat-icon class=\\\"s-16\\\">delete</mat-icon>\\n        </button>\\n    </mat-list-item>\\n    <!-- / COLORS -->\\n</mat-list>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.html\n// module chunks = scrumboard.module","module.exports = \":host .colors .color {\\n  position: relative;\\n  cursor: pointer; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.scss\n// module chunks = scrumboard.module","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { MatColors } from '@fuse/mat-colors';\n\nimport { ScrumboardService } from '../../../../scrumboard.service';\n\n@Component({\n    selector   : 'fuse-scrumboard-board-color-selector',\n    templateUrl: './board-color-selector.component.html',\n    styleUrls  : ['./board-color-selector.component.scss']\n})\nexport class FuseScrumboardBoardColorSelectorComponent implements OnInit, OnDestroy\n{\n    colors: any;\n    board: any;\n    onBoardChanged: Subscription;\n\n    constructor(\n        private scrumboardService: ScrumboardService\n    )\n    {\n        this.colors = MatColors.all;\n    }\n\n    ngOnInit()\n    {\n        this.onBoardChanged =\n            this.scrumboardService.onBoardChanged\n                .subscribe(board => {\n                    this.board = board;\n                });\n    }\n\n    ngOnDestroy()\n    {\n        this.onBoardChanged.unsubscribe();\n    }\n\n    setColor(color)\n    {\n        this.board.settings.color = color;\n        this.scrumboardService.updateBoard();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/sidenavs/settings/board-color-selector/board-color-selector.component.ts","module.exports = \"<div [ngSwitch]=\\\"view\\\" class=\\\"views\\\" (click)=\\\"$event.stopPropagation()\\\">\\n\\n    <div class=\\\"view\\\" *ngSwitchCase=\\\"'main'\\\" [@slideInLeft]>\\n\\n        <!-- SIDENAV HEADER -->\\n        <div class=\\\"header mat-accent-bg px-24\\\" [ngClass]=\\\"'mat-'+board.settings.color+'-bg'\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n            <div>Settings</div>\\n        </div>\\n        <!-- / SIDENAV HEADER -->\\n\\n        <!-- SIDENAV CONTENT -->\\n        <div class=\\\"content py-16\\\" fusePerfectScrollbar>\\n\\n            <div class=\\\"nav\\\">\\n                <div class=\\\"nav-item\\\">\\n                    <div class=\\\"nav-link\\\" matRipple (click)=\\\"view = 'board-color'\\\">\\n                        <mat-icon class=\\\"nav-link-icon\\\">format_color_fill</mat-icon>\\n                        <p class=\\\"title\\\">Board Color</p>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"nav-item\\\">\\n                    <div class=\\\"nav-link\\\" matRipple (click)=\\\"toggleCardCover()\\\">\\n                        <mat-icon class=\\\"nav-link-icon\\\">photo</mat-icon>\\n                        <p fxFlex class=\\\"title\\\">Card Cover Images</p>\\n                        <mat-icon *ngIf=\\\"board.settings.cardCoverImages\\\" class=\\\"s-18\\\">check</mat-icon>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"nav-item\\\">\\n                    <div class=\\\"nav-link\\\" matRipple (click)=\\\"toggleSubcription()\\\">\\n                        <mat-icon class=\\\"nav-link-icon\\\">remove_red_eye</mat-icon>\\n                        <p fxFlex class=\\\"title\\\">Subscribe</p>\\n                        <mat-icon *ngIf=\\\"board.settings.subscribed\\\" class=\\\"s-18\\\">check</mat-icon>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"nav-item\\\">\\n                    <div class=\\\"nav-link\\\" matRipple>\\n                        <mat-icon class=\\\"nav-link-icon\\\">content_copy</mat-icon>\\n                        <p class=\\\"title\\\">Copy Board</p>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"nav-item\\\">\\n                    <div class=\\\"nav-link\\\" matRipple>\\n                        <mat-icon class=\\\"nav-link-icon\\\">delete</mat-icon>\\n                        <p class=\\\"title\\\">Delete Board</p>\\n                    </div>\\n                </div>\\n\\n                <mat-divider></mat-divider>\\n            </div>\\n        </div>\\n        <!-- / SIDENAV CONTENT -->\\n    </div>\\n\\n    <div class=\\\"view\\\" *ngSwitchCase=\\\"'board-color'\\\" [@slideInRight]>\\n\\n        <!-- SIDENAV HEADER -->\\n        <div class=\\\"header mat-accent-bg px-24\\\" [ngClass]=\\\"'mat-'+board.settings.color+'-bg'\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <div>Background Color</div>\\n            <button mat-icon-button (click)=\\\"view ='main'\\\">\\n                <mat-icon class=\\\"s-16\\\">arrow_back</mat-icon>\\n            </button>\\n        </div>\\n        <!-- / SIDENAV HEADER -->\\n\\n        <!-- SIDENAV CONTENT -->\\n        <div class=\\\"content p-8\\\" fusePerfectScrollbar>\\n            <fuse-scrumboard-board-color-selector></fuse-scrumboard-board-color-selector>\\n        </div>\\n        <!-- / SIDENAV CONTENT -->\\n\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/sidenavs/settings/settings.component.html\n// module id = ./src/app/main/content/apps/scrumboard/board/sidenavs/settings/settings.component.html\n// module chunks = scrumboard.module","module.exports = \":host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 0 auto;\\n          flex: 1 0 auto;\\n  height: 100%; }\\n  :host .views {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    position: relative;\\n    overflow: hidden;\\n    height: 100%; }\\n  :host .views .view {\\n      position: absolute;\\n      width: 100%;\\n      height: 100%;\\n      bottom: 0;\\n      left: 0;\\n      right: 0;\\n      top: 0;\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-orient: vertical;\\n      -webkit-box-direction: normal;\\n          -ms-flex-direction: column;\\n              flex-direction: column; }\\n  :host .views .view > .header {\\n        -webkit-box-flex: 0;\\n            -ms-flex: 0 1 auto;\\n                flex: 0 1 auto;\\n        height: 64px;\\n        min-height: 64px;\\n        border-bottom: 1px solid rgba(0, 0, 0, 0.1); }\\n  :host .views .view > .content {\\n        -webkit-box-flex: 1;\\n            -ms-flex: 1 1 auto;\\n                flex: 1 1 auto;\\n        overflow-y: auto; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/board/sidenavs/settings/settings.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/board/sidenavs/settings/settings.component.scss\n// module chunks = scrumboard.module","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { ScrumboardService } from '../../../scrumboard.service';\n\n@Component({\n    selector   : 'fuse-scrumboard-board-settings',\n    templateUrl: './settings.component.html',\n    styleUrls  : ['./settings.component.scss'],\n    animations : fuseAnimations\n})\nexport class FuseScrumboardBoardSettingsSidenavComponent implements OnInit, OnDestroy\n{\n    board: any;\n    view = 'main';\n    onBoardChanged: Subscription;\n\n    constructor(\n        private scrumboardService: ScrumboardService\n    )\n    {\n    }\n\n    ngOnInit()\n    {\n        this.onBoardChanged =\n            this.scrumboardService.onBoardChanged\n                .subscribe(board => {\n                    this.board = board;\n                });\n    }\n\n    ngOnDestroy()\n    {\n        this.onBoardChanged.unsubscribe();\n    }\n    \n    toggleCardCover()\n    {\n        this.board.settings.cardCoverImages = !this.board.settings.cardCoverImages;\n        this.scrumboardService.updateBoard();\n    }\n\n    toggleSubcription()\n    {\n        this.board.settings.subscribed = !this.board.settings.subscribed;\n        this.scrumboardService.updateBoard();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/board/sidenavs/settings/settings.component.ts","import { FuseUtils } from '@fuse/utils';\n\nexport class Card\n{\n    id: string;\n    name: string;\n    description: string;\n    idAttachmentCover: string;\n    idMembers: string[];\n    idLabels: string[];\n    attachments: any[];\n    subscribed: boolean;\n    checklists: any[];\n    checkItems: number;\n    checkItemsChecked: number;\n    comments: any[];\n    activities: any[];\n    due: string;\n\n    constructor(card)\n    {\n        this.id = card.id || FuseUtils.generateGUID();\n        this.name = card.name || '';\n        this.description = card.description || '';\n        this.idAttachmentCover = card.idAttachmentCover || '';\n        this.idMembers = card.idMembers || [];\n        this.idLabels = card.idLabels || [];\n        this.attachments = card.attachments || [];\n        this.subscribed = card.subscribed || true;\n        this.checklists = card.checklists || [];\n        this.checkItems = card.checkItems || 0;\n        this.checkItemsChecked = card.checkItemsChecked || 0;\n        this.comments = card.comments || [];\n        this.activities = card.activities || [];\n        this.due = card.due || '';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/card.model.ts","import { FuseUtils } from '@fuse/utils';\n\nexport class List\n{\n    id: string;\n    name: string;\n    idCards: string[];\n\n    constructor(list)\n    {\n        this.id = list.id || FuseUtils.generateGUID();\n        this.name = list.name || '';\n        this.idCards = [];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/list.model.ts","module.exports = \"<!-- BOARDS -->\\n<div id=\\\"boards\\\" class=\\\"mat-primary-400-bg\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxFlex fusePerfectScrollbar>\\n\\n    <div class=\\\"header pt-44 pt-mat-88\\\" fxFlex=\\\"0 0 auto\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms'}}\\\">\\n        <h1>Scrumboard App</h1>\\n    </div>\\n\\n    <!-- BOARD LIST -->\\n    <div class=\\\"board-list\\\" fxFlex=\\\"0 0 auto\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\" *fuseIfOnDom\\n         [@animateStagger]=\\\"{value:'50'}\\\">\\n\\n        <!-- BOARD -->\\n        <div class=\\\"board-list-item\\\" *ngFor=\\\"let board of boards\\\"\\n             [routerLink]=\\\"'/apps/scrumboard/boards/'+board.id+'/'+board.uri\\\"\\n             fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\"\\n             [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\n            <mat-icon class=\\\"s-64\\\">assessment</mat-icon>\\n            <div class=\\\"board-name\\\">{{board.name}}</div>\\n        </div>\\n        <!-- / BOARD -->\\n\\n        <!-- NEW BOARD BUTTON -->\\n        <div class=\\\"board-list-item add-new-board\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\"\\n             (click)=\\\"newBoard()\\\"\\n             [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\n            <mat-icon class=\\\"s-64\\\">add_circle</mat-icon>\\n            <div class=\\\"board-name\\\">Add new board</div>\\n        </div>\\n        <!-- / NEW BOARD BUTTON -->\\n\\n    </div>\\n    <!-- / BOARD LIST -->\\n</div>\\n<!-- / BOARDS -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/scrumboard.component.html\n// module id = ./src/app/main/content/apps/scrumboard/scrumboard.component.html\n// module chunks = scrumboard.module","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  min-height: 100%; }\\n:host #boards {\\n    width: 100%;\\n    overflow: auto; }\\n:host #boards .board-list {\\n      padding: 32px 0;\\n      max-height: none !important; }\\n:host #boards .board-list .board-list-item {\\n        min-width: 210px;\\n        width: 210px;\\n        padding: 24px 0;\\n        margin: 16px;\\n        border-radius: 2px;\\n        background: rgba(0, 0, 0, 0.12);\\n        cursor: pointer; }\\n:host #boards .board-list .board-list-item:hover {\\n          -webkit-box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n                  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\\n:host #boards .board-list .board-list-item .board-name {\\n          padding-top: 16px;\\n          font-weight: 500; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/scrumboard/scrumboard.component.scss\n// module id = ./src/app/main/content/apps/scrumboard/scrumboard.component.scss\n// module chunks = scrumboard.module","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Board } from './board.model';\nimport { ScrumboardService } from './scrumboard.service';\n\n@Component({\n    selector   : 'fuse-scrumboard',\n    templateUrl: './scrumboard.component.html',\n    styleUrls  : ['./scrumboard.component.scss'],\n    animations : fuseAnimations\n})\nexport class FuseScrumboardComponent implements OnInit, OnDestroy\n{\n    boards: any[];\n    onBoardsChanged: Subscription;\n\n    constructor(\n        private  router: Router,\n        private scrumboardService: ScrumboardService\n    )\n    {\n    }\n\n    ngOnInit()\n    {\n        this.onBoardsChanged =\n            this.scrumboardService.onBoardsChanged\n                .subscribe(boards => {\n                    this.boards = boards;\n                });\n    }\n\n    ngOnDestroy()\n    {\n        this.onBoardsChanged.unsubscribe();\n    }\n\n    newBoard()\n    {\n        const newBoard = new Board({});\n        this.scrumboardService.createNewBoard(newBoard).then(() => {\n            this.router.navigate(['/apps/scrumboard/boards/' + newBoard.id + '/' + newBoard.uri]);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/scrumboard.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MatButtonModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatDialogModule, MatFormFieldModule, MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatProgressBarModule, MatRippleModule, MatSidenavModule, MatToolbarModule, MatTooltipModule } from '@angular/material';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseConfirmDialogModule, FuseMaterialColorPickerModule } from '@fuse/components';\n\nimport { BoardResolve, ScrumboardService } from './scrumboard.service';\nimport { FuseScrumboardComponent } from './scrumboard.component';\nimport { FuseScrumboardBoardComponent } from './board/board.component';\nimport { FuseScrumboardBoardListComponent } from './board/list/list.component';\nimport { FuseScrumboardBoardCardComponent } from './board/list/card/card.component';\nimport { FuseScrumboardBoardEditListNameComponent } from './board/list/edit-list-name/edit-list-name.component';\nimport { FuseScrumboardBoardAddCardComponent } from './board/list/add-card/add-card.component';\nimport { FuseScrumboardBoardAddListComponent } from './board/add-list/add-list.component';\nimport { FuseScrumboardCardDialogComponent } from './board/dialogs/card/card.component';\nimport { FuseScrumboardLabelSelectorComponent } from './board/dialogs/card/label-selector/label-selector.component';\nimport { FuseScrumboardEditBoardNameComponent } from './board/edit-board-name/edit-board-name.component';\nimport { FuseScrumboardBoardSettingsSidenavComponent } from './board/sidenavs/settings/settings.component';\nimport { FuseScrumboardBoardColorSelectorComponent } from './board/sidenavs/settings/board-color-selector/board-color-selector.component';\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\n\nconst routes: Routes = [\n    {\n        path     : 'boards',\n        component: FuseScrumboardComponent,\n        resolve  : {\n            scrumboard: ScrumboardService\n        }\n    },\n    {\n        path     : 'boards/:boardId/:boardUri',\n        component: FuseScrumboardBoardComponent,\n        resolve  : {\n            board: BoardResolve\n        }\n    },\n    {\n        path      : '**',\n        redirectTo: 'boards'\n    }\n];\n\n@NgModule({\n    declarations   : [\n        FuseScrumboardComponent,\n        FuseScrumboardBoardComponent,\n        FuseScrumboardBoardListComponent,\n        FuseScrumboardBoardCardComponent,\n        FuseScrumboardBoardEditListNameComponent,\n        FuseScrumboardBoardAddCardComponent,\n        FuseScrumboardBoardAddListComponent,\n        FuseScrumboardCardDialogComponent,\n        FuseScrumboardLabelSelectorComponent,\n        FuseScrumboardEditBoardNameComponent,\n        FuseScrumboardBoardSettingsSidenavComponent,\n        FuseScrumboardBoardColorSelectorComponent\n    ],\n    imports        : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatTooltipModule,\n\n        NgxDnDModule,\n\n        FuseSharedModule,\n        FuseConfirmDialogModule,\n        FuseMaterialColorPickerModule\n    ],\n    providers      : [\n        ScrumboardService,\n        BoardResolve\n    ],\n    entryComponents: [FuseScrumboardCardDialogComponent]\n})\nexport class FuseScrumboardModule\n{\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/scrumboard.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\n\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class ScrumboardService implements Resolve<any>\n{\n    boards: any[];\n    routeParams: any;\n    board: any;\n\n    onBoardsChanged: BehaviorSubject<any> = new BehaviorSubject([]);\n    onBoardChanged: BehaviorSubject<any> = new BehaviorSubject([]);\n\n    constructor(private http: HttpClient)\n    {\n    }\n\n    /**\n     * Resolve\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                this.getBoards()\n            ]).then(\n                () => {\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    getBoards(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this.http.get('api/scrumboard-boards')\n                .subscribe((response: any) => {\n                    this.boards = response;\n                    this.onBoardsChanged.next(this.boards);\n                    resolve(this.boards);\n                }, reject);\n        });\n    }\n\n    getBoard(boardId): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this.http.get('api/scrumboard-boards/' + boardId)\n                .subscribe((response: any) => {\n                    this.board = response;\n                    this.onBoardChanged.next(this.board);\n                    resolve(this.board);\n                }, reject);\n        });\n    }\n\n    addCard(listId, newCard)\n    {\n        this.board.lists.map((list) => {\n            if ( list.id === listId )\n            {\n                return list.idCards.push(newCard.id);\n            }\n        });\n\n        this.board.cards.push(newCard);\n\n        return this.updateBoard();\n    }\n\n    addList(newList)\n    {\n\n        this.board.lists.push(newList);\n\n        return this.updateBoard();\n\n    }\n\n    removeList(listId)\n    {\n        const list = this.board.lists.find((_list) => {\n            return _list.id === listId;\n        });\n\n        for ( const cardId of list.idCards )\n        {\n            this.removeCard(cardId);\n        }\n\n        const index = this.board.lists.indexOf(list);\n\n        this.board.lists.splice(index, 1);\n\n        return this.updateBoard();\n    }\n\n    removeCard(cardId, listId?)\n    {\n\n        const card = this.board.cards.find((_card) => {\n            return _card.id === cardId;\n        });\n\n        if ( listId )\n        {\n            const list = this.board.lists.find((_list) => {\n                return listId === _list.id;\n            });\n            list.idCards.splice(list.idCards.indexOf(cardId), 1);\n        }\n\n        this.board.cards.splice(this.board.cards.indexOf(card), 1);\n\n        this.updateBoard();\n    }\n\n    updateBoard()\n    {\n        return new Promise((resolve, reject) => {\n            this.http.post('api/scrumboard-boards/' + this.board.id, this.board)\n                .subscribe(response => {\n                    this.onBoardChanged.next(this.board);\n                    resolve(this.board);\n                }, reject);\n        });\n    }\n\n    updateCard(newCard)\n    {\n        this.board.cards.map((_card) => {\n            if ( _card.id === newCard.id )\n            {\n                return newCard;\n            }\n        });\n\n        this.updateBoard();\n    }\n\n    createNewBoard(board)\n    {\n        return new Promise((resolve, reject) => {\n            this.http.post('api/scrumboard-boards/' + board.id, board)\n                .subscribe(response => {\n                    resolve(board);\n                }, reject);\n        });\n    }\n}\n\n@Injectable()\nexport class BoardResolve implements Resolve<any>\n{\n    constructor(private scrumboardService: ScrumboardService)\n    {\n    }\n\n    resolve(route: ActivatedRouteSnapshot)\n    {\n        return this.scrumboardService.getBoard(route.paramMap.get('boardId'));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/scrumboard/scrumboard.service.ts"],"sourceRoot":"webpack:///"}