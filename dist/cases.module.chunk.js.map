{"version":3,"sources":["./src/app/features/cases/case-form/case-form.component.html","./src/app/features/cases/case-form/case-form.component.scss","./src/app/features/cases/case-form/case-form.component.ts","./src/app/features/cases/case.model.ts","./src/app/features/cases/cases-list/cases-list.component.html","./src/app/features/cases/cases-list/cases-list.component.scss","./src/app/features/cases/cases-list/cases-list.component.ts","./src/app/features/cases/cases.module.ts","./src/app/features/cases/cases.service.ts","./src/app/features/cases/cases/cases.component.html","./src/app/features/cases/cases/cases.component.scss","./src/app/features/cases/cases/cases.component.ts"],"names":[],"mappings":"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","file":"cases.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"dialog-content-wrapper\\\">\\n    <mat-toolbar matDialogTitle class=\\\"mat-accent m-0\\\" fxFlex=\\\"none\\\">\\n        <mat-toolbar-row fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <span class=\\\"title dialog-title\\\">{{dialogTitle}}</span>\\n\\n            <button mat-button class=\\\"mat-icon-button\\\"\\n                    (click)=\\\"dialogRef.close()\\\"\\n                    aria-label=\\\"Close dialog\\\">\\n                <mat-icon>close</mat-icon>\\n            </button>\\n        </mat-toolbar-row>\\n    </mat-toolbar>\\n\\n    <mat-dialog-content class=\\\"p-24 m-0\\\">\\n\\n        <form name=\\\"form\\\" [formGroup]=\\\"caseForm\\\"\\n              fxLayout=\\\"column\\\" fusePerfectScrollbar>\\n\\n            <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlex=\\\"none\\\">\\n                <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxFlex fxFlex.xs=\\\"none\\\">\\n                    <mat-icon class=\\\"mr-12 mt-12\\\"></mat-icon>\\n                    <mat-form-field fxFlex>\\n                        <input matInput formControlName=\\\"number\\\"\\n                               placeholder=\\\"Number\\\" readonly>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"mb-24\\\" fxFlex></div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlex=\\\"none\\\">\\n                <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxFlex fxFlex.xs=\\\"none\\\">\\n                    <mat-icon class=\\\"mr-12 mt-12\\\"></mat-icon>\\n                    <mat-form-field fxFlex>\\n                        <mat-select formControlName=\\\"priority\\\" placeholder=\\\"Priority\\\">\\n                            <mat-option [value]=\\\"priority\\\" *ngFor=\\\"let priority of priorities\\\">{{ priority }}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxFlex fxFlex.xs=\\\"none\\\">\\n                    <mat-icon class=\\\"mr-12 mt-12\\\"></mat-icon>\\n                    <mat-form-field fxFlex>\\n                        <mat-select formControlName=\\\"status\\\" placeholder=\\\"Status\\\">\\n                            <mat-option [value]=\\\"st\\\" *ngFor=\\\"let st of status\\\">{{ st }}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlex=\\\"none\\\">\\n                <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\"\\n                     fxFlex fxFlex.xs=\\\"none\\\">\\n                    <mat-icon class=\\\"mr-12 mt-12\\\"></mat-icon>\\n                    <mat-form-field fxFlex>\\n                        <input matInput formControlName=\\\"accountName\\\"\\n                               placeholder=\\\"Account Name\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\"\\n                     fxFlex fxFlex.xs=\\\"none\\\">\\n                    <mat-icon class=\\\"mr-12 mt-12\\\"></mat-icon>\\n                    <mat-form-field fxFlex>\\n                        <mat-select formControlName=\\\"type\\\" placeholder=\\\"Type\\\">\\n                            <mat-option [value]=\\\"type\\\" *ngFor=\\\"let type of accTypes\\\">{{ type }}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"none\\\">\\n                <mat-icon class=\\\"mr-12 mt-12\\\"></mat-icon>\\n                <mat-form-field fxFlex>\\n                    <input matInput formControlName=\\\"subject\\\" placeholder=\\\"Subject\\\">\\n                </mat-form-field>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"none\\\">\\n                <mat-icon class=\\\"mr-12 mt-12\\\"></mat-icon>\\n                <mat-form-field fxFlex>\\n                    <textarea formControlName=\\\"description\\\"\\n                              matInput type=\\\"text\\\" max-rows=\\\"4\\\"\\n                              placeholder=\\\"General Info\\\"></textarea>\\n                </mat-form-field>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"none\\\">\\n                <mat-icon class=\\\"mr-12 mt-12\\\"></mat-icon>\\n                <mat-form-field fxFlex>\\n                    <textarea formControlName=\\\"resolution\\\"\\n                              matInput type=\\\"text\\\" max-rows=\\\"4\\\"\\n                              placeholder=\\\"Resolution\\\"></textarea>\\n                </mat-form-field>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxFlex=\\\"none\\\">\\n                <div class=\\\"mb-24\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxFlex fxFlex.xs=\\\"none\\\">\\n                    <mat-icon class=\\\"mr-12 mt-12\\\"></mat-icon>\\n                    <mat-form-field fxFlex>\\n                        <input matInput\\n                               formControlName=\\\"salesRep\\\"\\n                               placeholder=\\\"Assigned To\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div fxFlex fxFlex.xs=\\\"none\\\"></div>\\n            </div>\\n        </form>\\n    </mat-dialog-content>\\n\\n    <mat-dialog-actions class=\\\"m-0 p-16\\\"\\n        fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n\\n        <button mat-raised-button\\n                (click)=\\\"save(caseForm)\\\"\\n                class=\\\"save-button mat-accent\\\"\\n                [disabled]=\\\"caseForm.invalid\\\"\\n                aria-label=\\\"Save\\\"\\n                matTooltip=\\\"Save\\\">\\n            SAVE\\n        </button>\\n\\n        <button *ngIf=\\\"action ==='edit'\\\"\\n                mat-button\\n                class=\\\"mat-icon-button\\\"\\n                (click)=\\\"delete(caseForm)\\\"\\n                aria-label=\\\"Delete\\\"\\n                matTooltip=\\\"Delete\\\">\\n            <mat-icon>delete</mat-icon>\\n        </button>\\n\\n    </mat-dialog-actions>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/features/cases/case-form/case-form.component.html\n// module id = ./src/app/features/cases/case-form/case-form.component.html\n// module chunks = cases.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/features/cases/case-form/case-form.component.scss\n// module id = ./src/app/features/cases/case-form/case-form.component.scss\n// module chunks = cases.module","import { Component, Inject, Input, ViewEncapsulation, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { CasesService } from '../cases.service';\nimport { Case } from '../case.model';\n\n@Component({\n    selector: 'fuse-case-form',\n    templateUrl: './case-form.component.html',\n    styleUrls: ['./case-form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FuseCaseFormComponent implements OnInit {\n    action: string;\n    dialogTitle: string;\n    case: Case;\n    caseForm: FormGroup;\n\n    status = ['Draft', 'In review'];\n    priorities = ['Low', 'Medium', 'High'];\n    accTypes = ['Administration'];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private casesService: CasesService,\n        @Inject(MAT_DIALOG_DATA) private data: any,\n        public dialogRef: MatDialogRef<FuseCaseFormComponent>,\n    ) {\n        this.action = data.action;\n\n        if ( this.action === 'edit' ) {\n            this.dialogTitle = 'Edit Case';\n            this.case = data.case;\n        } else {\n            this.dialogTitle = 'New Case';\n            this.case = new Case({});\n        }\n    }\n\n    ngOnInit() {\n        this.caseForm = this.formBuilder.group({\n            number     : [this.case.number],\n            status     : [this.case.status],\n            priority   : [this.case.priority],\n            salesRep   : [this.case.salesRep],\n            description: [this.case.description],\n            accountName: [this.case.accountName],\n            type       : [this.case.type],\n            subject    : [this.case.subject],\n            resolution : [this.case.resolution],\n            \n        });\n    }\n\n    save(form) {\n        this.dialogRef.close([\n            'save',\n            {\n                ...this.case,\n                ...form.getRawValue()\n            }\n        ]);\n    }\n\n    delete() {\n        this.dialogRef.close([ 'delete' ]);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/features/cases/case-form/case-form.component.ts","import { FuseUtils } from '@fuse/utils';\n\nexport class Case\n{\n    id: string;\n    number: string;\n    subject: string;\n    accountName: string;\n    priority: string;\n    status: string;\n    salesRep: string;\n    dateCreated: string;\n    type: string;\n    description: string;\n    resolution: string;\n\n    constructor(c) {\n        {\n            this.id = c.id || FuseUtils.generateGUID();\n            this.number = c.number || '';\n            this.subject = c.subject || '';\n            this.accountName = c.accountName || '';\n            this.priority = c.priority || '';\n            this.status = c.status || '';\n            this.salesRep = c.salesRep || '';\n            this.dateCreated = c.dateCreated || '';\n            this.type = c.type || '';\n            this.description = c.description || '';\n            this.resolution = c.resolution || '';\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/features/cases/case.model.ts","module.exports = \"<mat-table fxFlex #table matSort\\n        [dataSource]=\\\"dataSource\\\"\\n        [@animateStagger]=\\\"{value:'50'}\\\">\\n    <!-- Checkbox Column -->\\n    \\n    <ng-container cdkColumnDef=\\\"checkbox\\\">\\n        <mat-header-cell *cdkHeaderCellDef>\\n            <mat-checkbox (change)=\\\"toggleAll($event)\\\"\\n                        [checked]=\\\"selectedCount > 0 && selectedCount === paginator.length\\\"\\n                        [indeterminate]=\\\"selectedCount > 0 && selectedCount < paginator .length\\\">\\n            </mat-checkbox>\\n        </mat-header-cell>\\n        <mat-cell *cdkCellDef=\\\"let case\\\">\\n            <mat-checkbox [(ngModel)]=\\\"checkboxes[case.id]\\\"\\n                          (ngModelChange)=\\\"onSelectedChange(case.id)\\\"\\n                          (click)=\\\"$event.stopPropagation()\\\">\\n            </mat-checkbox>\\n        </mat-cell>\\n    </ng-container>\\n\\n    <ng-container cdkColumnDef=\\\"number\\\">\\n        <mat-header-cell class=\\\"pr-8\\\" *cdkHeaderCellDef mat-sort-header>Num.</mat-header-cell>\\n        <mat-cell class=\\\"pr-8\\\" *cdkCellDef=\\\"let case\\\">\\n            <p class=\\\"company text-truncate\\\">\\n                {{ case.number }}\\n            </p>\\n        </mat-cell>\\n    </ng-container>\\n\\n    <ng-container cdkColumnDef=\\\"subject\\\">\\n        <mat-header-cell class=\\\"pr-8\\\" *cdkHeaderCellDef mat-sort-header>Subject</mat-header-cell>\\n        <mat-cell class=\\\"pr-8\\\" *cdkCellDef=\\\"let case\\\">\\n            <p class=\\\"company text-truncate\\\">\\n                {{ case.subject }}\\n            </p>\\n        </mat-cell>\\n    </ng-container>\\n\\n    <ng-container cdkColumnDef=\\\"accountName\\\">\\n        <mat-header-cell class=\\\"pr-8\\\" *cdkHeaderCellDef mat-sort-header>Account Name</mat-header-cell>\\n        <mat-cell class=\\\"pr-8\\\" *cdkCellDef=\\\"let case\\\">\\n            <p class=\\\"company text-truncate\\\">\\n                {{ case.accountName }}\\n            </p>\\n        </mat-cell>\\n    </ng-container>\\n\\n    <ng-container cdkColumnDef=\\\"priority\\\">\\n        <mat-header-cell class=\\\"pr-8\\\" *cdkHeaderCellDef mat-sort-header>Priority</mat-header-cell>\\n        <mat-cell class=\\\"pr-8\\\" *cdkCellDef=\\\"let case\\\">\\n            <p class=\\\"company text-truncate\\\">\\n                {{ case.priority }}\\n            </p>\\n        </mat-cell>\\n    </ng-container>\\n\\n    <ng-container cdkColumnDef=\\\"status\\\">\\n        <mat-header-cell class=\\\"pr-8\\\" *cdkHeaderCellDef mat-sort-header>Status</mat-header-cell>\\n        <mat-cell class=\\\"pr-8\\\" *cdkCellDef=\\\"let case\\\">\\n            <p class=\\\"company text-truncate\\\">\\n                {{ case.status }}\\n            </p>\\n        </mat-cell>\\n    </ng-container>\\n\\n    <ng-container cdkColumnDef=\\\"salesRep\\\">\\n        <mat-header-cell class=\\\"pr-8\\\" *cdkHeaderCellDef mat-sort-header>Assigned To</mat-header-cell>\\n        <mat-cell class=\\\"pr-8\\\" *cdkCellDef=\\\"let case\\\">\\n            <p class=\\\"company text-truncate\\\">\\n                {{ case.salesRep }}\\n            </p>\\n        </mat-cell>\\n    </ng-container>\\n\\n    <ng-container cdkColumnDef=\\\"dateCreated\\\">\\n        <mat-header-cell class=\\\"pr-8\\\" *cdkHeaderCellDef mat-sort-header>Date Created</mat-header-cell>\\n        <mat-cell class=\\\"pr-8\\\" *cdkCellDef=\\\"let case\\\">\\n            <p class=\\\"company text-truncate\\\">\\n                {{ case.dateCreated | date }}\\n            </p>\\n        </mat-cell>\\n    </ng-container>\\n\\n    <ng-container cdkColumnDef=\\\"buttons\\\">\\n        <mat-header-cell *cdkHeaderCellDef fxFlex=\\\"none\\\" class=\\\"w-40\\\"></mat-header-cell>\\n        <mat-cell *cdkCellDef=\\\"let case\\\" fxFlex=\\\"none\\\" class=\\\"w-40\\\">\\n            <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"moreMenu\\\" aria-label=\\\"More\\\"\\n                        (click)=\\\"$event.stopPropagation();\\\">\\n                    <mat-icon>more_vert</mat-icon>\\n                </button>\\n\\n                <mat-menu #moreMenu=\\\"matMenu\\\">\\n                    <button mat-menu-item aria-label=\\\"clone\\\">\\n                        <mat-icon>content_copy</mat-icon>\\n                        <span>Clone</span>\\n                    </button>\\n                    <button mat-menu-item aria-label=\\\"remove\\\" (click)=\\\"deleteCase(case)\\\">\\n                        <mat-icon>delete</mat-icon>\\n                        <span>Remove</span>\\n                    </button>\\n                </mat-menu>\\n            </div>\\n\\n        </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *cdkRowDef=\\\"let case; columns: displayedColumns;\\\"\\n            class=\\\"case\\\"\\n            (click)=\\\"editCase(case)\\\"\\n            [ngClass]=\\\"{'mat-light-blue-50-bg':checkboxes[case.id]}\\\"\\n            matRipple\\n            [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\n    </mat-row>\\n</mat-table>\\n\\n<mat-paginator #paginator fxFlex=\\\"none\\\"\\n            [length]=\\\"dataSource.total\\\"\\n            [pageSize]=\\\"10\\\"\\n            [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n            [showFirstLastButtons]=\\\"true\\\">\\n</mat-paginator>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/features/cases/cases-list/cases-list.component.html\n// module id = ./src/app/features/cases/cases-list/cases-list.component.html\n// module chunks = cases.module","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\nfuse-cases-list {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  height: 100%;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  position: relative; }\\nfuse-cases-list .mat-table {\\n    -webkit-box-shadow: none;\\n            box-shadow: none;\\n    padding-top: 64px;\\n    position: static;\\n    overflow-y: auto; }\\nfuse-cases-list .mat-table .mat-header-row {\\n      background: white;\\n      width: 100%;\\n      padding-right: 8px;\\n      position: absolute;\\n      top: 0;\\n      z-index: 1; }\\nfuse-cases-list .mat-table .mat-column-checkbox {\\n      -webkit-box-flex: 0;\\n          -ms-flex: 0 1 48px;\\n              flex: 0 1 48px; }\\nfuse-cases-list .mat-table .mat-column-checkbox .mat-checkbox-ripple {\\n        display: none !important; }\\nfuse-cases-list .mat-table .mat-column-logo {\\n      -webkit-box-flex: 0;\\n          -ms-flex: 0 1 40px;\\n              flex: 0 1 40px; }\\nfuse-cases-list .mat-table .mat-column-buttons {\\n      -webkit-box-flex: 0;\\n          -ms-flex: 0 1 80px;\\n              flex: 0 1 80px; }\\nfuse-cases-list .mat-table .mat-row {\\n      position: relative;\\n      cursor: pointer;\\n      padding: 8px 8px 8px 24px;\\n      z-index: 0; }\\nfuse-cases-list .mat-table .mat-row .mat-cell {\\n        min-width: 0; }\\nfuse-cases-list .mat-table .mat-row .mat-cell.mat-column-detail-button {\\n          -webkit-box-flex: 0;\\n              -ms-flex: 0 1 auto;\\n                  flex: 0 1 auto;\\n          padding: 0 24px 0 0; }\\n@media screen and (min-width: 1280px) {\\n            fuse-cases-list .mat-table .mat-row .mat-cell.mat-column-detail-button {\\n              display: none; } }\\nfuse-cases-list .mat-paginator {\\n    -webkit-box-flex: 0;\\n        -ms-flex: none;\\n            flex: none; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/features/cases/cases-list/cases-list.component.scss\n// module id = ./src/app/features/cases/cases-list/cases-list.component.scss\n// module chunks = cases.module","import { Component, OnDestroy, OnInit, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MatPaginator, MatSort } from '@angular/material';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\nimport { FuseCaseFormComponent } from '../case-form/case-form.component';\n\nimport { CasesService } from '../cases.service';\nimport { Case } from '../case.model';\n\nimport 'rxjs/add/observable/merge';\n\n@Component({\n    selector     : 'fuse-cases-list',\n    templateUrl  : './cases-list.component.html',\n    styleUrls    : ['./cases-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class FuseCasesListComponent implements OnInit, OnDestroy\n{\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    dataSource: CaseDataSource | null;\n    displayedColumns = ['checkbox', 'number', 'subject', 'accountName', 'priority', 'status', 'salesRep', 'dateCreated', 'buttons'];\n    checkboxes: {};\n    selectedCount = 0;\n\n    onStoresChangedSubscription: Subscription;\n    onSelectionChangedSubscription: Subscription;\n\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n    dialogRef: MatDialogRef<FuseCaseFormComponent>;\n\n    constructor(\n        private casesService: CasesService,\n        private router: Router,\n        public dialog: MatDialog\n    )\n    {\n        this.onStoresChangedSubscription =\n            this.casesService.onStoresChanged.subscribe(cases => {\n                this.checkboxes = {};\n                cases.map(ws => {\n                    this.checkboxes[ws.id] = false;\n                });\n            });\n\n        this.onSelectionChangedSubscription =\n            this.casesService.onSelectionChanged.subscribe(selection => {\n                for ( const id in this.checkboxes )\n                {\n                    if (!this.checkboxes.hasOwnProperty(id)) {\n                        continue;\n                    }\n\n                    this.checkboxes[id] = selection.includes(id);\n                }\n\n                this.selectedCount = selection.length;\n            });\n\n    }\n\n    ngOnInit()\n    {\n        this.dataSource = new CaseDataSource(\n            this.casesService,\n            this.paginator,\n            this.sort\n        );\n    }\n\n    ngOnDestroy()\n    {\n        this.onStoresChangedSubscription.unsubscribe();\n        this.onSelectionChangedSubscription.unsubscribe();\n    }\n\n    deleteCase(ws)\n    {\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n            disableClose: false\n        });\n\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\n\n        this.confirmDialogRef.afterClosed().subscribe(result => {\n            if ( result ) {\n                this.casesService.deleteCase(ws);\n            }\n\n            this.confirmDialogRef = null;\n        });\n\n    }\n\n    onSelectedChange(wsId)\n    {\n        this.casesService.toggleSelected(wsId);\n    }\n\n    editCase(c)\n    {\n        this.dialogRef = this.dialog.open(FuseCaseFormComponent, {\n            panelClass: 'antera-details-dialog',\n            data      : {\n                action: 'edit',\n                case: c\n            }\n        });\n\n        this.dialogRef.afterClosed()\n            .subscribe(response => {\n                if ( !response )\n                {\n                    return;\n                }\n\n                const actionType: string = response[0];\n\n                switch ( actionType )\n                {\n                    case 'save':\n                        this.casesService.updateCase(response[1]);\n                        break;\n\n                    case 'delete':\n                        this.deleteCase(c);\n                        break;\n                }\n            });\n    }\n\n    toggleAll(ev) {\n        if (ev) {\n            this.casesService.toggleSelectAll();\n        }\n    }\n\n    toggleEnable(ws, ev) {\n        ev.stopPropagation();\n\n        this.casesService.updateCase({\n            ...ws,\n            enabled: !ws.enabled\n        });\n    }\n}\n\nexport class CaseDataSource extends DataSource<any>\n{\n    total = 0;\n\n    private subscription: Subscription;\n\n    constructor(\n        private casesService: CasesService,\n        private _paginator: MatPaginator,\n        private _sort: MatSort\n    ) {\n        super();\n    }\n\n    /** Connect function called by the table to retrieve one stream containing the data to render. */\n    connect(): Observable<Case[]>\n    {\n        this.subscription = this.casesService.onStoresChanged\n            .subscribe(cases => {\n                setTimeout(() => {\n                    this.total = cases.length;\n                });\n            });\n\n        const displayDataChanges = [\n            this.casesService.onStoresChanged,\n            this._paginator.page,\n            this._sort.sortChange\n        ];\n\n        return Observable.merge(...displayDataChanges)\n            .map(() => {\n                let cases = this.casesService.cases;\n\n                cases = this.sortData(cases);\n\n                const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n                cases = cases.slice(startIndex, startIndex + this._paginator.pageSize);\n\n                return cases;\n            });\n    }\n\n    sortData(data): Case[] {\n        if ( !this._sort.active || this._sort.direction === '' )\n        {\n            return data;\n        }\n\n        return data.sort((a, b) => {\n            let valueA = a[this._sort.active];\n            let valueB = b[this._sort.active];\n\n            return (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1);\n        });\n    }\n\n    disconnect()\n    {\n        this.subscription.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/features/cases/cases-list/cases-list.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport {\n    MatButtonModule,\n    MatCheckboxModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSortModule,\n    MatTabsModule,\n    MatTableModule,\n    MatToolbarModule\n} from '@angular/material';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseConfirmDialogModule } from '@fuse/components';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { CasesService } from './cases.service';\n\nimport { FuseCasesComponent } from './cases/cases.component';\nimport { FuseCasesListComponent } from './cases-list/cases-list.component';\nimport { FuseCaseFormComponent } from './case-form/case-form.component';\n\nconst routes: Routes = [\n    {\n        path: '**',\n        component: FuseCasesComponent,\n        resolve  : {\n            case: CasesService\n        }\n    }\n];\n\n@NgModule({\n    declarations   : [\n        FuseCasesComponent,\n        FuseCasesListComponent,\n        FuseCaseFormComponent,\n    ],\n    imports        : [\n        RouterModule.forChild(routes),\n        CdkTableModule,\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatNativeDateModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatSortModule,\n        MatTabsModule,\n        MatTableModule,\n        MatToolbarModule,\n\n        FuseSharedModule,\n        FuseConfirmDialogModule,\n        SharedModule\n    ],\n    providers      : [\n        CasesService\n    ],\n    entryComponents: [\n        FuseCaseFormComponent\n    ]\n})\nexport class FuseCasesModule\n{\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/features/cases/cases.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\n\nimport { FuseUtils } from '@fuse/utils';\n\nimport { Case } from './case.model';\n\nconst searchFields = [\n    'clientName', 'hostName', 'points', 'distributor'\n];\n\n@Injectable()\nexport class CasesService implements Resolve<any>\n{\n    onStoresChanged: BehaviorSubject<Case[]>;\n    onSelectionChanged: BehaviorSubject<string[]>;\n    // onUserDataChanged: BehaviorSubject<any> = new BehaviorSubject([]);\n    onSearchTextChanged: Subject<any> = new Subject();\n    // onFilterChanged: Subject<any> = new Subject();\n\n    cases: Case[];\n    // user: any;\n    // selectedAccounts: string[] = [];\n\n    private _searchText: string;\n    private _selection: string[];\n    // filterBy: string;\n\n    constructor(private http: HttpClient)\n    {\n        this.onStoresChanged = new BehaviorSubject([]);\n        this.onSelectionChanged = new BehaviorSubject([]);\n        this._searchText = '';\n        this._selection = [];\n\n        this.onSearchTextChanged.subscribe(val => {\n            this._searchText = val;\n\n            this.getCases().then(console.log);\n        });\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        return this.getCases();\n    }\n\n    getCases(): Promise<any>\n    {\n        return new Promise(\n            (resolve, reject) => {\n                this.http.get('api/cases')\n                    .subscribe((response: Case[]) => {\n\n                        this.cases = response;\n\n                        if ( this._searchText && this._searchText !== '' )\n                        {\n                            this.cases = FuseUtils.filterFieldsByString(\n                                this.cases, this._searchText, searchFields\n                            );\n                        }\n\n                        this.onStoresChanged.next(this.cases);\n                        resolve(this.cases);\n                    }, reject);\n            }\n        );\n    }\n\n    /**\n     * Toggle selected case by id\n     * @param id\n     */\n    toggleSelected(id) \n    {\n        if ( this._selection.length > 0 )\n        {\n            const index = this._selection.indexOf(id);\n\n            if ( index !== -1 )\n            {\n                this._selection.splice(index, 1);\n                this.onSelectionChanged.next(this._selection);\n\n                return;\n            }\n        }\n\n        this._selection.push(id);\n        this.onSelectionChanged.next(this._selection);\n    }\n\n    toggleSelectAll() \n    {\n        if ( this._selection.length === this.cases.length) {\n            this.deselectAll();\n        } else {\n            this.selectAll();\n        }\n    }\n\n    selectAll()\n    {\n        this._selection = this.cases.map(ws => ws.id);\n        this.onSelectionChanged.next(this._selection);\n    }\n\n    deselectAll()\n    {\n        this._selection = [];\n        this.onSelectionChanged.next(this._selection);\n    }\n\n    updateCase(ws: Case)\n    {\n        return new Promise((resolve, reject) => {\n\n            this.http.post('api/cases/' + ws.id, {...ws})\n                .subscribe(response => {\n                    this.getCases().then(resolve, reject);\n                });\n        });\n    }\n\n    deleteCase(ws)\n    {\n        const accountIndex = this.cases.indexOf(ws);\n        this.cases.splice(accountIndex, 1);\n        this.onStoresChanged.next(this.cases);\n    }\n\n    deleteSelectedCases()\n    {\n        this.cases = this.cases.filter(\n            ws => this._selection.indexOf(ws.id) < 0\n        );\n\n        this.deselectAll();\n        this.onStoresChanged.next(this.cases);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/features/cases/cases.service.ts","module.exports = \"<div id=\\\"case\\\" class=\\\"page-layout carded fullwidth\\\" fusePerfectScrollbar>\\n\\n    <!-- TOP BACKGROUND -->\\n    <div class=\\\"top-bg mat-accent-bg\\\"></div>\\n    <!-- / TOP BACKGROUND -->\\n\\n    <!-- CENTER -->\\n    <div class=\\\"center\\\">\\n\\n        <!-- HEADER -->\\n        <div class=\\\"header white-fg\\\"\\n             fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\"\\n             fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\n\\n            <!-- APP TITLE -->\\n            <div class=\\\"logo my-12 m-sm-0\\\" fxFlex=\\\"1 0 auto\\\" \\n                 fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <mat-icon class=\\\"logo-icon mr-16\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">folder_shared</mat-icon>\\n                <span class=\\\"logo-text h1\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">Cases</span>\\n            </div>\\n            <!-- / APP TITLE -->\\n\\n            <!-- SEARCH -->\\n            <div class=\\\"search-input-wrapper mx-12 m-md-0\\\"\\n                 fxFlex=\\\"1 0 auto\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <label for=\\\"search\\\" class=\\\"mr-8\\\">\\n                    <mat-icon class=\\\"secondary-text\\\">search</mat-icon>\\n                </label>\\n                <mat-form-field floatPlaceholder=\\\"never\\\" fxFlex=\\\"1 0 auto\\\">\\n                    <input matInput [formControl]=\\\"searchInput\\\" id=\\\"search\\\" placeholder=\\\"Search for cases\\\">\\n                </mat-form-field>\\n            </div>\\n            <!-- / SEARCH -->\\n\\n        </div>\\n        <!-- / HEADER -->\\n\\n        <!-- CONTENT  -->\\n        <div class=\\\"content-card mat-white-bg\\\">\\n\\n            <div class=\\\"toolbar px-24 py-8\\\">\\n                <div class=\\\"mail-selection\\\" fxFlex=\\\"row\\\">\\n                    <div fxFlex=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n                        <button mat-raised-button color=\\\"accent\\\"\\n                                class=\\\"text-capitalize mr-8\\\"\\n                                (click)=\\\"newCase()\\\">\\n                            Add\\n                        </button>\\n\\n                        <button mat-raised-button color=\\\"warn\\\"\\n                                class=\\\"text-capitalize mr-8\\\"\\n                                (click)=\\\"deleteSelectedCases()\\\">\\n                            Delete\\n                        </button>\\n\\n                        <button mat-raised-button color=\\\"accent\\\"\\n                                class=\\\"text-capitalize mr-8\\\">\\n                            Clone\\n                        </button>\\n                    </div>\\n\\n                    <div class=\\\"toolbar-separator\\\"></div>\\n\\n                    <button mat-button class=\\\"text-capitalize\\\" [matMenuTriggerFor]=\\\"selectMenu\\\">\\n                        More Actions\\n                        <mat-icon>arrow_drop_down</mat-icon>\\n                    </button>\\n                    <mat-menu #selectMenu=\\\"matMenu\\\">\\n                        <button mat-menu-item class=\\\"text-capitalize\\\"\\n                                (click)=\\\"emailSelected()\\\">Email\\n                        </button>\\n                        <button mat-menu-item class=\\\"text-capitalize\\\"\\n                                (click)=\\\"massUpdateSelected()\\\">Mass Update\\n                        </button>\\n                        <button mat-menu-item class=\\\"text-capitalize\\\"\\n                                (click)=\\\"mergeSelected()\\\">Merge\\n                        </button>\\n                        <button mat-menu-item class=\\\"text-capitalize\\\"\\n                                (click)=\\\"addToTargetListSelected()\\\">Add To Target List\\n                        </button>\\n                        <button mat-menu-item class=\\\"text-capitalize\\\"\\n                                (click)=\\\"generateLetterSelected()\\\">Generate Letter\\n                        </button>\\n                        <button mat-menu-item class=\\\"text-capitalize\\\"\\n                                (click)=\\\"addToTargetListSelected()\\\">Change Log\\n                        </button>\\n                    </mat-menu>\\n\\n                </div>\\n            </div>\\n\\n            <fuse-cases-list></fuse-cases-list>\\n\\n        </div>\\n        <!-- / CONTENT CARD -->\\n    </div>\\n    <!-- / CENTER -->\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/features/cases/cases/cases.component.html\n// module id = ./src/app/features/cases/cases/cases.component.html\n// module chunks = cases.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/features/cases/cases/cases.component.scss\n// module id = ./src/app/features/cases/cases/cases.component.scss\n// module chunks = cases.module","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\n\nimport { CasesService } from '../cases.service';\nimport { FuseCaseFormComponent } from '../case-form/case-form.component';\n\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\n@Component({\n    selector     : 'fuse-cases',\n    templateUrl  : './cases.component.html',\n    styleUrls    : ['./cases.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class FuseCasesComponent implements OnInit, OnDestroy\n{\n    selectedCount: number;\n    searchInput: FormControl;\n    onSelectionSubscription: Subscription;\n\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n    dialogRef: MatDialogRef<FuseCaseFormComponent>;\n\n    constructor(\n        private casesService: CasesService,\n        public dialog: MatDialog\n    )\n    {\n        this.searchInput = new FormControl('');\n    }\n\n    ngOnInit()\n    {\n        this.onSelectionSubscription =\n            this.casesService.onSelectionChanged\n                .subscribe(selection => {\n                    this.selectedCount = selection.length;\n                });\n\n        this.searchInput.valueChanges\n            .debounceTime(300)\n            .distinctUntilChanged()\n            .subscribe(searchText => {\n                this.casesService.onSearchTextChanged.next(searchText);\n            });\n    }\n\n    ngOnDestroy()\n    {\n        this.onSelectionSubscription.unsubscribe();\n    }\n\n    newCase()\n    {\n        this.dialogRef = this.dialog.open(FuseCaseFormComponent, {\n            panelClass: 'antera-details-dialog',\n            data      : {\n                action: 'new'\n            }\n        });\n\n        this.dialogRef.afterClosed()\n            .subscribe((response: FormGroup) => {\n                if ( !response ) {\n                    return;\n                }\n\n                this.casesService.updateCase(response[1]);\n            });\n    }\n\n    deleteSelectedCases()\n    {\n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n            disableClose: false\n        });\n\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete all selected cases?';\n\n        this.confirmDialogRef.afterClosed().subscribe(result => {\n            if ( result ) {\n                this.casesService.deleteSelectedCases();\n            }\n            this.confirmDialogRef = null;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/features/cases/cases/cases.component.ts"],"sourceRoot":"webpack:///"}